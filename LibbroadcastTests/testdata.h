//*****************************************************************************
// Libbroadcast: A library for broadcasting video over RTMP
//
// Copyright (C) 2014 Lucas Murray <lucas@polyflare.com>
// All rights reserved.
//
// This program is free software; you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the Free
// Software Foundation; either version 2 of the License, or (at your option)
// any later version.
//
// This program is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
// more details.
//*****************************************************************************

#ifndef TESTDATA_H
#define TESTDATA_H

//=============================================================================
// Test H.264 stream (64 x 36, 30 fps, 100 kb/s)

// Frame(Key=1 TS=5,966/5,900 PTS=0 DTS=-2 Pkts=[SPS PPS SEI IDR] MaxSize=2,243 MinSize=1,474)
const uchar testVidFrame0SPS[] = { // SPS only
	0x00, 0x00, 0x00, 0x01, 0x67, 0x64, 0x00, 0x09,
	0xAC, 0xD9, 0x44, 0x7F, 0x9E, 0x10, 0x00, 0x00,
	0x03, 0x00, 0x10, 0x00, 0x00, 0x03, 0x03, 0xC8,
	0xF1, 0x22, 0x59, 0x60 };
const uchar testVidFrame0PPS[] = { // PPS only
	0x00, 0x00, 0x00, 0x01, 0x68, 0xEF, 0xBC, 0xB0 };
const uchar testVidFrame0SEI[] = { // SEI only
	0x00, 0x00, 0x01, 0x06,
	0x05, 0xFF, 0xFF, 0xD6, 0xDC, 0x45, 0xE9, 0xBD,
	0xE6, 0xD9, 0x48, 0xB7, 0x96, 0x2C, 0xD8, 0x20,
	0xD9, 0x23, 0xEE, 0xEF, 0x78, 0x32, 0x36, 0x34,
	0x20, 0x2D, 0x20, 0x63, 0x6F, 0x72, 0x65, 0x20,
	0x31, 0x33, 0x33, 0x20, 0x2D, 0x20, 0x48, 0x2E,
	0x32, 0x36, 0x34, 0x2F, 0x4D, 0x50, 0x45, 0x47,
	0x2D, 0x34, 0x20, 0x41, 0x56, 0x43, 0x20, 0x63,
	0x6F, 0x64, 0x65, 0x63, 0x20, 0x2D, 0x20, 0x43,
	0x6F, 0x70, 0x79, 0x72, 0x69, 0x67, 0x68, 0x74,
	0x20, 0x32, 0x30, 0x30, 0x33, 0x2D, 0x32, 0x30,
	0x31, 0x33, 0x20, 0x2D, 0x20, 0x68, 0x74, 0x74,
	0x70, 0x3A, 0x2F, 0x2F, 0x77, 0x77, 0x77, 0x2E,
	0x76, 0x69, 0x64, 0x65, 0x6F, 0x6C, 0x61, 0x6E,
	0x2E, 0x6F, 0x72, 0x67, 0x2F, 0x78, 0x32, 0x36,
	0x34, 0x2E, 0x68, 0x74, 0x6D, 0x6C, 0x20, 0x2D,
	0x20, 0x6F, 0x70, 0x74, 0x69, 0x6F, 0x6E, 0x73,
	0x3A, 0x20, 0x63, 0x61, 0x62, 0x61, 0x63, 0x3D,
	0x31, 0x20, 0x72, 0x65, 0x66, 0x3D, 0x31, 0x20,
	0x64, 0x65, 0x62, 0x6C, 0x6F, 0x63, 0x6B, 0x3D,
	0x31, 0x3A, 0x30, 0x3A, 0x30, 0x20, 0x61, 0x6E,
	0x61, 0x6C, 0x79, 0x73, 0x65, 0x3D, 0x30, 0x78,
	0x33, 0x3A, 0x30, 0x78, 0x31, 0x31, 0x33, 0x20,
	0x6D, 0x65, 0x3D, 0x68, 0x65, 0x78, 0x20, 0x73,
	0x75, 0x62, 0x6D, 0x65, 0x3D, 0x32, 0x20, 0x70,
	0x73, 0x79, 0x3D, 0x31, 0x20, 0x70, 0x73, 0x79,
	0x5F, 0x72, 0x64, 0x3D, 0x31, 0x2E, 0x30, 0x30,
	0x3A, 0x30, 0x2E, 0x30, 0x30, 0x20, 0x6D, 0x69,
	0x78, 0x65, 0x64, 0x5F, 0x72, 0x65, 0x66, 0x3D,
	0x30, 0x20, 0x6D, 0x65, 0x5F, 0x72, 0x61, 0x6E,
	0x67, 0x65, 0x3D, 0x31, 0x36, 0x20, 0x63, 0x68,
	0x72, 0x6F, 0x6D, 0x61, 0x5F, 0x6D, 0x65, 0x3D,
	0x31, 0x20, 0x74, 0x72, 0x65, 0x6C, 0x6C, 0x69,
	0x73, 0x3D, 0x30, 0x20, 0x38, 0x78, 0x38, 0x64,
	0x63, 0x74, 0x3D, 0x31, 0x20, 0x63, 0x71, 0x6D,
	0x3D, 0x30, 0x20, 0x64, 0x65, 0x61, 0x64, 0x7A,
	0x6F, 0x6E, 0x65, 0x3D, 0x32, 0x31, 0x2C, 0x31,
	0x31, 0x20, 0x66, 0x61, 0x73, 0x74, 0x5F, 0x70,
	0x73, 0x6B, 0x69, 0x70, 0x3D, 0x31, 0x20, 0x63,
	0x68, 0x72, 0x6F, 0x6D, 0x61, 0x5F, 0x71, 0x70,
	0x5F, 0x6F, 0x66, 0x66, 0x73, 0x65, 0x74, 0x3D,
	0x30, 0x20, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x73, 0x3D, 0x33, 0x20, 0x6C, 0x6F, 0x6F, 0x6B,
	0x61, 0x68, 0x65, 0x61, 0x64, 0x5F, 0x74, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x73, 0x3D, 0x31, 0x20,
	0x73, 0x6C, 0x69, 0x63, 0x65, 0x64, 0x5F, 0x74,
	0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x3D, 0x30,
	0x20, 0x6E, 0x72, 0x3D, 0x30, 0x20, 0x64, 0x65,
	0x63, 0x69, 0x6D, 0x61, 0x74, 0x65, 0x3D, 0x31,
	0x20, 0x69, 0x6E, 0x74, 0x65, 0x72, 0x6C, 0x61,
	0x63, 0x65, 0x64, 0x3D, 0x30, 0x20, 0x62, 0x6C,
	0x75, 0x72, 0x61, 0x79, 0x5F, 0x63, 0x6F, 0x6D,
	0x70, 0x61, 0x74, 0x3D, 0x30, 0x20, 0x63, 0x6F,
	0x6E, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6E, 0x65,
	0x64, 0x5F, 0x69, 0x6E, 0x74, 0x72, 0x61, 0x3D,
	0x30, 0x20, 0x62, 0x66, 0x72, 0x61, 0x6D, 0x65,
	0x73, 0x3D, 0x33, 0x20, 0x62, 0x5F, 0x70, 0x79,
	0x72, 0x61, 0x6D, 0x69, 0x64, 0x3D, 0x32, 0x20,
	0x62, 0x5F, 0x61, 0x64, 0x61, 0x70, 0x74, 0x3D,
	0x31, 0x20, 0x62, 0x5F, 0x62, 0x69, 0x61, 0x73,
	0x3D, 0x30, 0x20, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x3D, 0x31, 0x20, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x62, 0x3D, 0x31, 0x20, 0x6F, 0x70,
	0x65, 0x6E, 0x5F, 0x67, 0x6F, 0x70, 0x3D, 0x30,
	0x20, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x70,
	0x3D, 0x31, 0x20, 0x6B, 0x65, 0x79, 0x69, 0x6E,
	0x74, 0x3D, 0x33, 0x30, 0x20, 0x6B, 0x65, 0x79,
	0x69, 0x6E, 0x74, 0x5F, 0x6D, 0x69, 0x6E, 0x3D,
	0x33, 0x20, 0x73, 0x63, 0x65, 0x6E, 0x65, 0x63,
	0x75, 0x74, 0x3D, 0x34, 0x30, 0x20, 0x69, 0x6E,
	0x74, 0x72, 0x61, 0x5F, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x3D, 0x30, 0x20, 0x72, 0x63,
	0x5F, 0x6C, 0x6F, 0x6F, 0x6B, 0x61, 0x68, 0x65,
	0x61, 0x64, 0x3D, 0x31, 0x30, 0x20, 0x72, 0x63,
	0x3D, 0x63, 0x62, 0x72, 0x20, 0x6D, 0x62, 0x74,
	0x72, 0x65, 0x65, 0x3D, 0x31, 0x20, 0x62, 0x69,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x3D, 0x31, 0x30,
	0x30, 0x20, 0x72, 0x61, 0x74, 0x65, 0x74, 0x6F,
	0x6C, 0x3D, 0x31, 0x2E, 0x30, 0x20, 0x71, 0x63,
	0x6F, 0x6D, 0x70, 0x3D, 0x30, 0x2E, 0x36, 0x30,
	0x20, 0x71, 0x70, 0x6D, 0x69, 0x6E, 0x3D, 0x30,
	0x20, 0x71, 0x70, 0x6D, 0x61, 0x78, 0x3D, 0x36,
	0x39, 0x20, 0x71, 0x70, 0x73, 0x74, 0x65, 0x70,
	0x3D, 0x34, 0x20, 0x76, 0x62, 0x76, 0x5F, 0x6D,
	0x61, 0x78, 0x72, 0x61, 0x74, 0x65, 0x3D, 0x31,
	0x30, 0x30, 0x20, 0x76, 0x62, 0x76, 0x5F, 0x62,
	0x75, 0x66, 0x73, 0x69, 0x7A, 0x65, 0x3D, 0x31,
	0x30, 0x30, 0x20, 0x6E, 0x61, 0x6C, 0x5F, 0x68,
	0x72, 0x64, 0x3D, 0x6E, 0x6F, 0x6E, 0x65, 0x20,
	0x69, 0x70, 0x5F, 0x72, 0x61, 0x74, 0x69, 0x6F,
	0x3D, 0x31, 0x2E, 0x34, 0x30, 0x20, 0x61, 0x71,
	0x3D, 0x31, 0x3A, 0x31, 0x2E, 0x30, 0x30, 0x00,
	0x80 };
const uchar testVidFrame0[] = { // IDR only
	0x00, 0x00, 0x01, 0x65, 0x88, 0x84, 0x00,
	0x14, 0xFF, 0xD1, 0xB4, 0x71, 0xF3, 0xFB, 0x24,
	0x7A, 0xD0, 0x86, 0x46, 0x84, 0x85, 0xD2, 0x01,
	0x20, 0x2D, 0x17, 0xEE, 0x7F, 0x19, 0x22, 0x32,
	0x55, 0x92, 0x94, 0x15, 0x45, 0x8A, 0x26, 0x56,
	0xB2, 0x31, 0x3D, 0x84, 0x3A, 0x74, 0xC5, 0xE9,
	0xF6, 0xE5, 0x22, 0xA9, 0xAC, 0xB6, 0x4A, 0xDC,
	0x4B, 0x57, 0x05, 0xF5, 0xD5, 0x37, 0xBE, 0x10,
	0xC1, 0x8C, 0x5C, 0xA9, 0x62, 0x70, 0x4D, 0x3E,
	0xC8, 0x3F, 0xBC, 0xA1, 0x88, 0x32, 0xDD, 0x97,
	0x79, 0x98, 0xC5, 0xB5, 0x72, 0x92, 0xC2, 0x9F,
	0x2F, 0xDA, 0x08, 0xA8, 0xF0, 0x8D, 0xDD, 0x60,
	0xE9, 0x1E, 0xBE, 0xA4, 0x7E, 0x5E, 0x2D, 0x3E,
	0x13, 0x3D, 0xFF, 0x09, 0x69, 0x0B, 0x04, 0x48,
	0xD5, 0x8C, 0xBB, 0x58, 0x43, 0x62, 0xE2, 0x5F,
	0x05, 0xE5, 0x85, 0x5A, 0xD9, 0x9B, 0x59, 0xD4,
	0x99, 0x76, 0x14, 0x4F, 0x0C, 0xDB, 0x5F, 0x03,
	0x21, 0x56, 0xB5, 0xA8, 0x1C, 0xF2, 0xC3, 0x59,
	0x7C, 0x95, 0xE1, 0xFA, 0x2E, 0xF5, 0xC8, 0x5F,
	0x4F, 0x28, 0xB5, 0xA5, 0x0F, 0x7B, 0x42, 0x37,
	0x19, 0x4F, 0x54, 0xAC, 0xF8, 0xD7, 0x21, 0x09,
	0xFC, 0x60, 0x03, 0xED, 0x06, 0x8B, 0xD9, 0x30,
	0x28, 0x18, 0x31, 0x1E, 0x39, 0xE1, 0xE8, 0x41,
	0xE2, 0xA2, 0xEC, 0x3B, 0x5B, 0xBF, 0x72, 0xF0,
	0xD2, 0x94, 0xEC, 0xD0, 0x00, 0xB0, 0x8A, 0x9F,
	0x54, 0xB9, 0xB2, 0x4D, 0x8C, 0xEE, 0xE4, 0x3F,
	0xC4, 0x72, 0xB7, 0x2D, 0x0A, 0xC2, 0x10, 0xD8,
	0x75, 0xDD, 0xCF, 0x5B, 0x74, 0x91, 0x36, 0x74,
	0xF4, 0x99, 0xE0, 0xAB, 0x45, 0xFC, 0xB9, 0xC1,
	0x38, 0x87, 0x13, 0x1B, 0x35, 0x8C, 0x8B, 0xAD,
	0x1C, 0x66, 0x1C, 0xE1, 0xCF, 0x13, 0xC7, 0x9B,
	0x8D, 0x9E, 0xE0, 0xBE, 0x24, 0xDC, 0x11, 0x80,
	0x55, 0x2B, 0xD3, 0xCC, 0x91, 0x43, 0x82, 0xCD,
	0x0F, 0x23, 0xF7, 0x28, 0xDB, 0xB2, 0xD0, 0x4D,
	0x46, 0x2C, 0xCC, 0x8A, 0xF7, 0x8E, 0xDB, 0x10,
	0xCE, 0x7A, 0x43, 0x43, 0x90, 0x87, 0xCE, 0xC4,
	0x7A, 0x42, 0x79, 0x32, 0x8F, 0xFC, 0xD1, 0xD7,
	0x3D, 0x44, 0xE4, 0xC7, 0x67, 0xBD, 0xCA, 0x65,
	0x57, 0xF3, 0x98, 0xFD, 0x40, 0xA2, 0x33, 0x61,
	0x43, 0xE8, 0xA1, 0x31, 0xA5, 0x87, 0xDA, 0x9C,
	0xAF, 0xA2, 0x87, 0x24, 0x05, 0x62, 0xDA, 0x3B,
	0x80, 0x68, 0xE4, 0xEC, 0x9F, 0x17, 0x6E, 0xE4,
	0xBC, 0x8D, 0xA4, 0x9F, 0xC1, 0x99, 0x4D, 0x13,
	0x4B, 0x8C, 0x61, 0xAE, 0xC6, 0x98, 0x26, 0x73,
	0x3B, 0x5C, 0x9A, 0xBF, 0xFC, 0xD6, 0xC4, 0xCA,
	0x11, 0xBF, 0xF5, 0xCC, 0x62, 0x61, 0xCE, 0x03,
	0xC3, 0xF9, 0xDC, 0xDA, 0xE0, 0xEA, 0xA6, 0xBC,
	0x14, 0x91, 0x8F, 0x6E, 0x3B, 0xDB, 0x8D, 0x0F,
	0x2E, 0x85, 0xCF, 0x8B, 0xC1, 0xCC, 0x66, 0x0E,
	0x1C, 0x23, 0x6E, 0xCD, 0xEA, 0x93, 0xBA, 0x35,
	0xB0, 0xC5, 0x78, 0x7E, 0x97, 0x8B, 0x39, 0xD0,
	0x23, 0xFC, 0x8C, 0x67, 0x60, 0xFC, 0x2F, 0xCA,
	0xF9, 0x03, 0x26, 0xCA, 0x02, 0x75, 0x9A, 0xD4,
	0xE5, 0x85, 0xB0, 0xD7, 0x6C, 0x6C, 0xAC, 0x9B,
	0x7E, 0xC1, 0x62, 0x3B, 0x33, 0x14, 0x7D, 0xC4,
	0xFA, 0x39, 0x93, 0xC9, 0x24, 0x95, 0x16, 0xD9,
	0x3E, 0x43, 0xD1, 0x2D, 0xEE, 0x8E, 0x56, 0xAB,
	0xF2, 0xF5, 0xC6, 0x2D, 0xE9, 0x70, 0xC2, 0xE7,
	0xED, 0xA0, 0xBC, 0x75, 0x47, 0x32, 0x14, 0x93,
	0xE9, 0xEB, 0x87, 0xC2, 0xE8, 0x1E, 0xA2, 0xA3,
	0xD1, 0x24, 0xAD, 0x4F, 0xC2, 0x5D, 0xEF, 0xCC,
	0x33, 0x93, 0x72, 0x79, 0x6F, 0x63, 0xE6, 0x4D,
	0x7D, 0x0B, 0x61, 0xC0, 0x87, 0xEA, 0x89, 0x82,
	0x35, 0x07, 0x1A, 0xFC, 0x24, 0x01, 0xBD, 0xB3,
	0x9E, 0x96, 0x79, 0xD0, 0xF2, 0x00, 0x0C, 0x1A,
	0x0D, 0x00, 0xE2, 0xBE, 0x40, 0x5A, 0x9F, 0xA8,
	0xBE, 0x68, 0xF4, 0x10, 0x0D, 0x4D, 0xCC, 0x5F,
	0x51, 0xCC, 0x9D, 0x4D, 0xC0, 0x49, 0x52, 0xDD,
	0x93, 0x3C, 0x21, 0x49, 0x2C, 0x40, 0x58, 0x05,
	0x52, 0x0A, 0x69, 0x84, 0xA3, 0x57, 0x48, 0x88,
	0x2D, 0x6D, 0x40, 0xB1, 0x43, 0x4B, 0x8E, 0x5B,
	0xF7, 0xB0, 0xE9, 0x5B, 0x28, 0xD0, 0x85, 0xBF,
	0x3F, 0x44, 0xF9, 0x71, 0x57, 0xA0, 0x31, 0xC1,
	0x91, 0x4B, 0x4E, 0xBD, 0xCC, 0x71, 0xA4, 0x00,
	0x07, 0x26, 0x2E, 0x81, 0xDB, 0x5B, 0x22, 0x52,
	0x7A, 0xF0, 0x67, 0x51, 0xE0, 0xFF, 0x6B, 0x63,
	0x84, 0x91, 0x43, 0x9C, 0xAB, 0x72, 0xDB, 0xFB,
	0x4F, 0xD1, 0x87, 0xC1, 0x71, 0x6D, 0xDD, 0x72,
	0x3A, 0xE0, 0x3C, 0xA6, 0x4C, 0x28, 0xEC, 0x50,
	0xCD, 0x61, 0xBE, 0xB5, 0x65, 0x4B, 0x33, 0x86,
	0xE8, 0x53, 0xB4, 0x8D, 0x7C, 0x6F, 0xED, 0x93,
	0x18, 0x94, 0xDD, 0xFD, 0xA2, 0x2C, 0xA5, 0x13,
	0xC9, 0xF7, 0xC7, 0x10, 0x11, 0x9B, 0xF2, 0x2C,
	0xB5, 0x51, 0xD8, 0xF0, 0xF7, 0x9E, 0xFB, 0xF2,
	0x9A, 0x60, 0xB1, 0xB2, 0xCE, 0xDB, 0x98, 0x16,
	0x1C, 0xEE, 0x1D, 0x10, 0xF5, 0xF6, 0x37, 0x84,
	0x01, 0x4B, 0xDF, 0x62, 0x8D, 0x73, 0x3C, 0x98,
	0xD6, 0xDC, 0x96, 0x73, 0x55, 0x2C, 0x5D, 0x85,
	0xD5, 0xDD, 0x7E, 0xDD, 0xBD, 0xF7, 0x4D, 0x26,
	0x4F, 0x77, 0x05, 0x06, 0x93, 0xD6, 0x07, 0x06,
	0x9F, 0xDD, 0xD1, 0xD2, 0xA0, 0x6C, 0xEF, 0xC6,
	0x15, 0x38, 0x47, 0xD5, 0x10, 0xB4, 0xBF, 0x07,
	0xE4, 0x4F, 0x89, 0x4E, 0x0A, 0x9D, 0x32, 0x23,
	0xDA, 0x81, 0x55, 0xD2, 0xC2, 0xB8, 0xEC, 0x48,
	0x2F, 0x9C, 0xE3, 0xC0, 0xDD, 0xD7, 0xFE, 0xAA,
	0x22, 0x31, 0xBD, 0x62, 0xD8, 0x01, 0x9E, 0x61,
	0xEE, 0x2C, 0xA6, 0x51, 0xB9, 0x30, 0x34, 0x6A,
	0xD4, 0x79, 0x03, 0xD8, 0x34, 0x45, 0xAC, 0x76,
	0xB5, 0xB9, 0xF5, 0x94, 0xA6, 0x04, 0x68, 0x6D,
	0x2C, 0x65, 0x10, 0x18, 0x9B, 0xCC, 0xC6, 0x85,
	0x96, 0x94, 0x22, 0xAF, 0xA4, 0x67, 0x23, 0xC7,
	0x49, 0x57, 0x52, 0x63, 0x33, 0xC9, 0x3A, 0xCF,
	0x3E, 0x7E, 0x88, 0x40, 0xFC, 0xAD, 0xF8, 0xC1,
	0xE7, 0x55, 0x2D, 0x05, 0x7E, 0x5D, 0x92, 0xF5,
	0x11, 0xB4, 0x46, 0x37, 0x26, 0x95, 0xCE, 0xA7,
	0x22, 0xBF, 0x72, 0x3D, 0xF9, 0x64, 0xF4, 0xAE,
	0xC7, 0x91, 0x2D, 0x4D, 0xDE, 0x3F, 0x02, 0x39,
	0xF5, 0x18, 0x56, 0x01, 0x81, 0x8E, 0xBD, 0x94,
	0x74, 0xB4, 0x6E, 0x08, 0x6D, 0xED, 0x61, 0x8B,
	0x23, 0x9B, 0x5E, 0x94, 0x65, 0x02, 0xB3, 0xEF,
	0x70, 0x1F, 0x0B, 0x6C, 0x20, 0xC3, 0x6A, 0x6A,
	0x8C, 0x90, 0xE4, 0xFF, 0x65, 0x9A, 0xD3, 0xAD,
	0xBD, 0xDB, 0x51, 0xCF, 0x59, 0x01, 0x8F, 0x2B,
	0x40, 0x1A, 0xE7, 0xE1, 0xA9, 0x28, 0x73, 0xF7,
	0x69, 0xD6, 0xCE, 0xCD, 0xD9, 0xB9, 0xC4, 0xB4,
	0x37, 0x86, 0x3A, 0xC4, 0x75, 0x39, 0x1B, 0x55,
	0x41, 0xE5, 0x69, 0xE8, 0xF1, 0x6F, 0xDA, 0xB5,
	0x73, 0x1A, 0xA1, 0x48, 0x5B, 0x74, 0x5B, 0x0A,
	0x0C, 0x29, 0x50, 0x4D, 0x18, 0x6B, 0xF6, 0x6F,
	0x3A, 0x69, 0x7A, 0xC2, 0x9A, 0xCF, 0x40, 0x97,
	0x84, 0x36, 0x3B, 0x8B, 0x39, 0xE8, 0x29, 0x8C,
	0xC2, 0x4B, 0x53, 0x1E, 0x6C, 0xEA, 0x05, 0x38,
	0x69, 0xA2, 0x58, 0x28, 0xE7, 0x5F, 0xBF, 0xA2,
	0x94, 0x00, 0x3F, 0xA3, 0xB2, 0x12, 0x7C, 0xF1,
	0x8A, 0xB7, 0x7B, 0x60, 0xE4, 0x4D, 0xA8, 0xA0,
	0xF2, 0xCF, 0x33, 0x3D, 0xDE, 0x22, 0xF8, 0x59,
	0xD1, 0x32, 0x64, 0xFD, 0xB3, 0x10, 0x71, 0x9E,
	0xBD, 0x64, 0x5F, 0xE5, 0x89, 0xC0, 0xF6, 0xC0,
	0x48, 0x7B, 0xE3, 0xD8, 0x67, 0xAC, 0x72, 0x65,
	0xF6, 0xBA, 0x59, 0x85, 0x24, 0xAC, 0x77, 0xCF,
	0x3B, 0xA8, 0x1E, 0x6C, 0xAA, 0x4F, 0xFB, 0xDB,
	0x26, 0xE8, 0x53, 0x17, 0xE3, 0x68, 0xFF, 0xE3,
	0x6E, 0xD2, 0xE7, 0xE9, 0x55, 0xBF, 0x55, 0x31,
	0x2F, 0xCE, 0x3B, 0xBD, 0xE9, 0x22, 0x01, 0x9C,
	0xD7, 0xC9, 0x93, 0xED, 0x99, 0x32, 0xD4, 0x78,
	0x59, 0xF8, 0xDA, 0x8E, 0x54, 0x6C, 0x8D, 0x93,
	0x0B, 0x6D, 0xD7, 0x9B, 0x3A, 0xF9, 0xA6, 0x3D,
	0xF9, 0x5D, 0xB6, 0xD3, 0x17, 0xEA, 0xC3, 0xE2,
	0xAF, 0x7D, 0x82, 0x81, 0x7E, 0x13, 0x99, 0x7F,
	0x42, 0xC1, 0x81, 0x22, 0xFD, 0xA5, 0xE2, 0x0F,
	0x4B, 0x47, 0xCD, 0x49, 0xF0, 0x36, 0xA2, 0xD5,
	0xB2, 0x74, 0xBA, 0x86, 0xE9, 0xEA, 0x12, 0x7B,
	0x64, 0xC4, 0x8C, 0xCA, 0x80, 0xCC, 0xBC, 0xD0,
	0x27, 0x58, 0xE3, 0x8E, 0x60, 0xA0, 0xCF, 0x62,
	0xDE, 0x73, 0xF6, 0x32, 0x22, 0xD2, 0xEF, 0xF7,
	0x23, 0x29, 0xF7, 0x58, 0x8E, 0x02, 0x5B, 0x85,
	0x44, 0x8A, 0xF8, 0x3D, 0xA0, 0x0C, 0x46, 0x1C,
	0x2F, 0x73, 0x00, 0xFC, 0x31, 0x7B, 0x44, 0xB7,
	0x68, 0xFA, 0x86, 0xBA, 0x07, 0x66, 0x35, 0x1C,
	0xE9, 0xC3, 0x8F, 0x84, 0x4F, 0xB8, 0xDC, 0x43,
	0xF0, 0x44, 0x32, 0xEE, 0xCE, 0x72, 0xCC, 0x44,
	0xDD, 0xFD, 0x6B, 0x17, 0x9F, 0x34, 0x07, 0x5A,
	0x60, 0xD6, 0x31, 0x55, 0xD9, 0xF5, 0xA3, 0xD2,
	0xEA, 0x02, 0x84, 0xBB, 0x7F, 0x25, 0x97, 0x61,
	0x0A, 0xB1, 0x87, 0xF2, 0x4D, 0xBE, 0x75, 0x07,
	0xE0, 0xCA, 0xD7, 0x7E, 0x66, 0x23, 0x4B, 0x4A,
	0xFE, 0x17, 0x34, 0xCE, 0xF2, 0x50, 0x13, 0x61,
	0xCE, 0xFA, 0x8D, 0x50, 0x79, 0xD6, 0xAF, 0xE8,
	0x1C, 0x47, 0xCF, 0x49, 0x76, 0xED, 0x79, 0xEC,
	0x6E, 0xF6, 0x86, 0x52, 0x37, 0x53, 0x02, 0x7A,
	0x20, 0xFD, 0xDE, 0x68, 0x71, 0x84, 0x4E, 0x22,
	0x52, 0x22, 0x56, 0x85, 0x0C, 0xDD, 0x42, 0x26,
	0xBE, 0xE6, 0x1C, 0xB2, 0x9F, 0x30, 0xE8, 0x24,
	0x11, 0xE4, 0x7F, 0x22, 0x9A, 0xAF, 0x18, 0xE1,
	0xE8, 0xE7, 0x3F, 0x59, 0x66, 0x80, 0xD9, 0x02,
	0xDD, 0xFF, 0x3B, 0xB1, 0x50, 0xD4, 0x83, 0xA8,
	0x83, 0x99, 0x5C, 0x46, 0xE7, 0x56, 0x00, 0x89,
	0xE7, 0x8E, 0xCE, 0x4A, 0x6B, 0xC9, 0xC9, 0xE1,
	0x2D, 0x75, 0x9B, 0x45, 0xA6, 0x6A, 0x35, 0x2C,
	0x92, 0x3C, 0x39, 0xE7, 0xA4, 0x21, 0xCE, 0x38,
	0x3F, 0xD1, 0xBF, 0xA5, 0x6B, 0x9F, 0x21, 0x87,
	0xC0, 0x51, 0xA9, 0x6A, 0xFC, 0x36, 0x3B, 0x54,
	0xB5, 0x45, 0xC9, 0x83, 0xED, 0xC6, 0xCC, 0xEA,
	0xB9, 0x06, 0x8D, 0x6F, 0x32, 0x67, 0x6C, 0x50,
	0x16, 0x01, 0x9D, 0xA4, 0x2D, 0x47, 0xB8, 0x0A,
	0x6A, 0x9A, 0xAE, 0x86, 0xBE, 0xD6, 0x18, 0xD7,
	0x5A, 0x93, 0xC2, 0xAC, 0xFE, 0x43, 0x40, 0x09,
	0x1B, 0x36, 0x37, 0x9F, 0x9C, 0x08, 0xA1, 0xCF,
	0x1E, 0xF9, 0x6E, 0xD1, 0x6B, 0xCD, 0x36, 0x06,
	0x09, 0x90, 0xD0, 0xD4, 0xE3, 0x65, 0x82, 0x69,
	0x78, 0x6A, 0x6C, 0x34, 0x09, 0xB7, 0x1A, 0x5C,
	0xF3, 0x77, 0x6A, 0xE9, 0x19, 0x2D, 0x5D, 0xD4,
	0x82, 0xDE, 0x52, 0xDF, 0x23, 0x4B, 0x42, 0xE6,
	0x69, 0xD1, 0x65, 0x4C, 0x3B, 0x18, 0xE4, 0x03,
	0x1E, 0xD1, 0xEF };

// Frame(Key=0 TS=6,033/5,934 PTS=2 DTS=-1 Pkts=[SLICE] MaxSize=497 MinSize=497)
const uchar testVidFrame1[] = {
	0x00, 0x00, 0x00, 0x01, 0x41, 0x9A, 0x22, 0x18,
	0x82, 0x5F, 0x96, 0xD7, 0x9D, 0xB6, 0xD8, 0xE1,
	0x0C, 0xD0, 0x0B, 0xDF, 0xEB, 0x6D, 0x60, 0xE5,
	0xA8, 0xB6, 0xBF, 0x97, 0xFC, 0xA6, 0x21, 0x91,
	0x77, 0x05, 0x84, 0x47, 0x1A, 0xCD, 0xB6, 0xC0,
	0x72, 0x31, 0xFF, 0x3F, 0xA6, 0xB0, 0x99, 0x3D,
	0x46, 0xD8, 0xC7, 0x8B, 0xD3, 0xBC, 0xE9, 0x44,
	0xE5, 0x9C, 0xC4, 0x0A, 0xFD, 0xB5, 0xBD, 0xB3,
	0x79, 0x67, 0xE6, 0xE4, 0x05, 0x8F, 0xBC, 0x87,
	0x12, 0x59, 0xCF, 0xB8, 0x6A, 0xC8, 0xC5, 0x70,
	0x28, 0x54, 0x89, 0x04, 0xDB, 0x78, 0x14, 0x92,
	0xD9, 0xDD, 0x4F, 0x6A, 0x7D, 0xBC, 0xE8, 0x8B,
	0xB8, 0xDB, 0x07, 0x5C, 0xBC, 0x59, 0x9D, 0xA6,
	0xBE, 0x41, 0x8E, 0x14, 0xD2, 0xF1, 0x80, 0x2A,
	0x4E, 0x86, 0xE0, 0x8B, 0x75, 0xF6, 0x49, 0x45,
	0xDA, 0x29, 0xCB, 0x32, 0x69, 0x00, 0x57, 0x4F,
	0xC4, 0x70, 0x1A, 0x39, 0xD0, 0x50, 0xE1, 0x9C,
	0x19, 0xD6, 0x09, 0xB5, 0xC3, 0xDA, 0x7C, 0x1A,
	0x48, 0x34, 0xC1, 0x9A, 0x99, 0x6A, 0x84, 0xFE,
	0xED, 0x30, 0x88, 0xEE, 0xBE, 0x09, 0xA4, 0x26,
	0x19, 0x8D, 0xCC, 0x4A, 0xED, 0xE7, 0x2C, 0x50,
	0xD9, 0xD0, 0x7C, 0xCF, 0xB6, 0x5E, 0x0E, 0xD5,
	0x02, 0xA9, 0x13, 0xB9, 0x8E, 0x48, 0xC3, 0xC1,
	0x74, 0x88, 0x64, 0xC0, 0x70, 0xCE, 0x2B, 0x72,
	0xA6, 0x2B, 0xB6, 0x36, 0xBF, 0x6A, 0x25, 0xA1,
	0xC5, 0xDD, 0x32, 0x81, 0x0B, 0x8C, 0x0E, 0x86,
	0x08, 0x78, 0x6E, 0x64, 0xFA, 0x5D, 0x16, 0x1D,
	0xFB, 0x99, 0xD0, 0x5E, 0x6C, 0x03, 0x55, 0xFB,
	0x94, 0x79, 0xE9, 0x1E, 0xCB, 0x92, 0x54, 0xEE,
	0x64, 0x48, 0x04, 0x07, 0x6C, 0xDA, 0x5F, 0xB9,
	0x4B, 0x92, 0x17, 0x45, 0x5E, 0x19, 0x83, 0x92,
	0xE2, 0x51, 0x5B, 0x1E, 0x97, 0x7C, 0xB2, 0xE9,
	0xD6, 0xD7, 0xD4, 0x5C, 0x2B, 0x99, 0xA1, 0x98,
	0x4F, 0x5F, 0xCC, 0xAD, 0x97, 0x77, 0x7B, 0x7F,
	0x7F, 0x1A, 0xF7, 0x64, 0xD0, 0x27, 0x5D, 0x7D,
	0x19, 0xF2, 0x2D, 0x7A, 0xFB, 0x39, 0x9A, 0xA6,
	0x40, 0x34, 0xF7, 0x3F, 0xEB, 0x0B, 0x11, 0x58,
	0xC9, 0x5D, 0x59, 0x29, 0x61, 0x04, 0xC4, 0x0F,
	0x67, 0x83, 0x3D, 0x90, 0x0E, 0x5B, 0x5B, 0xF2,
	0x6E, 0x56, 0x07, 0x23, 0xBE, 0xD9, 0x5D, 0x0E,
	0x88, 0x6C, 0xF6, 0xF5, 0x1B, 0x2C, 0x52, 0x72,
	0x93, 0x25, 0x77, 0xA1, 0xCB, 0x21, 0x14, 0xD4,
	0x68, 0x8C, 0x4D, 0xA4, 0x03, 0xFD, 0x92, 0x90,
	0x7E, 0xEA, 0x13, 0x5B, 0x1B, 0xD8, 0x40, 0x16,
	0xFD, 0x3B, 0x31, 0xF7, 0x59, 0x44, 0xF1, 0x84,
	0xDC, 0x9E, 0xE9, 0x33, 0xF8, 0x0D, 0x4A, 0xA9,
	0x6C, 0xED, 0x93, 0x7D, 0xF7, 0xE3, 0x19, 0x12,
	0x78, 0x3B, 0x86, 0xAD, 0x97, 0x3B, 0xA7, 0x10,
	0x60, 0x52, 0x13, 0x29, 0x70, 0x7C, 0x07, 0xD9,
	0x7F, 0x27, 0x16, 0xC6, 0xCD, 0xCC, 0xCF, 0x38,
	0x09, 0x5D, 0x2F, 0x07, 0xE2, 0xCC, 0x1B, 0x75,
	0xAD, 0x74, 0xBD, 0x4F, 0x94, 0xCA, 0x51, 0x0C,
	0x54, 0xB0, 0xB3, 0xD6, 0x6B, 0x35, 0x6D, 0xF7,
	0x29, 0xB3, 0x6A, 0x4E, 0x10, 0xD3, 0x0A, 0x7D,
	0xAC, 0xD4, 0x3B, 0x8D, 0x2C, 0xB7, 0x1D, 0x1B,
	0x9F, 0x10, 0x2B, 0x0B, 0x04, 0xBF, 0x88, 0x85,
	0x71, 0x50, 0x17, 0xCA, 0xC4, 0x85, 0x50, 0x2F,
	0x41, 0x86, 0xDE, 0xC6, 0x8C, 0x86, 0xCF, 0xE2,
	0x8C, 0xED, 0x5F, 0x97, 0xE2, 0x49, 0xF6, 0xF8,
	0x1E, 0x88, 0xDE, 0x9B, 0xEF, 0xF5, 0x79, 0x77,
	0xDA, 0x8C, 0x45, 0xD4, 0xCD, 0xC0, 0x73, 0x9C,
	0x5E, 0x4E, 0x86, 0x7A, 0x05, 0x79, 0x3D, 0x01,
	0xE0 };

// Frame(Key=0 TS=6,000/5,967 PTS=1 DTS=0 Pkts=[SLICE] MaxSize=12 MinSize=12)
const uchar testVidFrame2[] = {
	0x00, 0x00, 0x00, 0x01, 0x01, 0x9E, 0x41, 0x44,
	0x3B, 0xFF, 0x11, 0x31 };

// Frame(Key=0 TS=6,100/6,000 PTS=4 DTS=1 Pkts=[SLICE] MaxSize=1,932 MinSize=1,932)
const uchar testVidFrame3[] = {
	0x00, 0x00, 0x00, 0x01, 0x41, 0x9A, 0x44, 0x18,
	0x82, 0x3F, 0x88, 0x72, 0x75, 0xD0, 0x7C, 0x00,
	0x5F, 0xD7, 0x3B, 0x8C, 0x2F, 0x90, 0x18, 0xA6,
	0xA3, 0x39, 0x53, 0x07, 0xE1, 0x53, 0xF7, 0xD3,
	0x5F, 0xC8, 0xAB, 0xA5, 0x5B, 0xB8, 0xA6, 0x0A,
	0xF0, 0x53, 0xE5, 0x62, 0x4D, 0xC3, 0xA9, 0x5C,
	0x02, 0x66, 0x01, 0x27, 0xB6, 0x05, 0xCA, 0x53,
	0x8E, 0xD6, 0xE2, 0x69, 0x7B, 0x99, 0x54, 0x18,
	0xEA, 0xBD, 0x4D, 0x3E, 0x69, 0x1E, 0x61, 0x3F,
	0x72, 0x00, 0x7B, 0x96, 0x97, 0xD2, 0xC6, 0x93,
	0xE0, 0x54, 0xE6, 0xF2, 0xFC, 0x96, 0xE5, 0xD7,
	0xAE, 0xDA, 0x5C, 0x26, 0x97, 0x55, 0xE2, 0x79,
	0xA5, 0xC1, 0x02, 0x11, 0x16, 0xC5, 0xD2, 0x6B,
	0xFF, 0xFB, 0x36, 0x57, 0x92, 0x52, 0x86, 0xD4,
	0x30, 0x6C, 0x11, 0x17, 0x7D, 0x81, 0x87, 0xB6,
	0xC8, 0xA4, 0x45, 0x01, 0xB4, 0x2A, 0x45, 0x37,
	0x09, 0x02, 0xAC, 0x56, 0xA5, 0x4E, 0xFD, 0xC9,
	0xF5, 0x51, 0x2F, 0x47, 0x88, 0x18, 0xA2, 0x3A,
	0xB5, 0xF5, 0x90, 0x86, 0x3E, 0x0C, 0xAF, 0xC4,
	0xF4, 0x83, 0xAD, 0x80, 0xCB, 0xAD, 0xC1, 0xE3,
	0x3B, 0x54, 0x7E, 0x96, 0x9C, 0x6C, 0xF4, 0x1E,
	0x4C, 0x5E, 0x44, 0xE2, 0xC8, 0x0D, 0xC3, 0x15,
	0xB3, 0x50, 0x0A, 0x7A, 0x15, 0x24, 0x7D, 0x8F,
	0xCA, 0xFD, 0x21, 0x7B, 0x60, 0xCA, 0x0B, 0x7D,
	0x26, 0x04, 0x5A, 0x27, 0x48, 0xA7, 0x2D, 0x55,
	0xC3, 0xCC, 0xE9, 0x7E, 0xEB, 0xFD, 0xC7, 0x4B,
	0xB1, 0xD7, 0xD6, 0x9B, 0x61, 0xB1, 0x6F, 0xA1,
	0xFA, 0x7B, 0x7C, 0xD5, 0x28, 0x82, 0x62, 0x76,
	0x72, 0x2F, 0xA1, 0x3E, 0xD4, 0xB8, 0x75, 0x4D,
	0xF6, 0x6C, 0x8E, 0x10, 0x72, 0x0E, 0x23, 0xAF,
	0x93, 0xA3, 0x09, 0x67, 0xD5, 0xB5, 0xCA, 0x0C,
	0xBC, 0x5C, 0xC4, 0xFF, 0x8B, 0xB7, 0x40, 0x37,
	0x87, 0xA1, 0xCC, 0xB4, 0x51, 0xAC, 0x60, 0x9D,
	0xE4, 0x65, 0xDF, 0x30, 0x3D, 0x7A, 0x76, 0xA2,
	0xE3, 0x2F, 0x60, 0x46, 0xED, 0x44, 0xE3, 0x39,
	0x04, 0x2D, 0x54, 0xDF, 0x83, 0x7B, 0x44, 0x6C,
	0x6B, 0x80, 0xCF, 0xFF, 0xB7, 0x87, 0x3C, 0xDA,
	0x6B, 0x10, 0xEA, 0xA9, 0x15, 0x87, 0xB5, 0x00,
	0xE3, 0xCD, 0xE0, 0x65, 0xB6, 0xA0, 0xF7, 0x7D,
	0x51, 0xDD, 0xD5, 0x99, 0xE0, 0x4D, 0x85, 0x5B,
	0x12, 0xBD, 0x6F, 0x21, 0xC1, 0x03, 0x36, 0x98,
	0x29, 0xE8, 0x70, 0xA8, 0x1D, 0xDF, 0x1B, 0xF8,
	0x88, 0xA2, 0x5A, 0x7B, 0x13, 0xF1, 0x24, 0xC0,
	0x5E, 0xB1, 0x0D, 0xBE, 0x0D, 0x01, 0x7C, 0xD8,
	0xB0, 0x80, 0x3C, 0x9C, 0x5B, 0x1A, 0x2A, 0xE9,
	0x1E, 0x11, 0x08, 0xFD, 0x2E, 0xB7, 0x71, 0x2B,
	0xFC, 0x45, 0xC9, 0x0D, 0xF6, 0xF3, 0x79, 0xB7,
	0xB6, 0x16, 0x67, 0x9F, 0xE1, 0x2A, 0xA7, 0xF6,
	0x5F, 0xD9, 0x98, 0xC2, 0xFE, 0x62, 0x3A, 0x91,
	0x0B, 0x60, 0x21, 0xFC, 0xD8, 0xC1, 0xE5, 0xCB,
	0xF5, 0x8B, 0x64, 0x60, 0xA5, 0x3D, 0x90, 0xAE,
	0xD9, 0xCC, 0x01, 0x3E, 0x52, 0x2E, 0x6E, 0xFE,
	0xA3, 0xE0, 0xE3, 0x2F, 0xE7, 0x5F, 0x29, 0xE9,
	0x64, 0xCB, 0x5E, 0xD2, 0xEE, 0x65, 0xC9, 0xBD,
	0x89, 0x19, 0x3E, 0x4A, 0xE9, 0x41, 0xA3, 0x8F,
	0x88, 0x79, 0x2B, 0x1F, 0x84, 0xC2, 0xDB, 0x52,
	0x40, 0xA1, 0x21, 0x98, 0xCF, 0xE2, 0xFE, 0x13,
	0x59, 0xC9, 0xE2, 0x11, 0x23, 0x90, 0x53, 0xE3,
	0xC7, 0xAA, 0xDA, 0xD5, 0x0C, 0xEA, 0x87, 0x8B,
	0xC4, 0xDF, 0x61, 0xB6, 0x6F, 0x39, 0x9D, 0x6D,
	0x80, 0x1E, 0xCB, 0xBB, 0x05, 0x3E, 0x43, 0x04,
	0x4B, 0xE5, 0x79, 0x4B, 0xBB, 0xC8, 0xE2, 0xED,
	0xA8, 0x04, 0xFD, 0x4A, 0xAC, 0xD8, 0x23, 0x0B,
	0x6B, 0xD2, 0xD2, 0xB8, 0x65, 0xB0, 0x33, 0x97,
	0x3B, 0xD0, 0x22, 0xD2, 0xC1, 0x37, 0xF7, 0x94,
	0x5A, 0x1E, 0xF8, 0x55, 0x07, 0x7F, 0x78, 0x90,
	0x23, 0x45, 0x05, 0x43, 0xBD, 0xDC, 0xB9, 0x7A,
	0x41, 0xC9, 0xFA, 0x0B, 0xE0, 0x12, 0x4D, 0x41,
	0xEA, 0x32, 0xB2, 0x76, 0x39, 0x3F, 0x77, 0x72,
	0x30, 0x11, 0x67, 0x6D, 0x76, 0xE5, 0x9E, 0x64,
	0x8C, 0x48, 0xDE, 0x1E, 0x63, 0xF2, 0x9B, 0x6D,
	0x84, 0x2C, 0x51, 0xE8, 0x46, 0x53, 0xCC, 0x49,
	0xFB, 0xF8, 0x47, 0x03, 0x0C, 0xD0, 0x58, 0x92,
	0xB2, 0xDC, 0xF3, 0x80, 0xD8, 0x84, 0xAF, 0x56,
	0xB8, 0xF7, 0xE0, 0x15, 0x51, 0xD9, 0xF9, 0x1A,
	0x8E, 0x9D, 0xC1, 0x2D, 0x66, 0x3F, 0xE8, 0x4D,
	0x7F, 0x7B, 0x33, 0x85, 0x8F, 0x82, 0xAA, 0x60,
	0xE8, 0x58, 0xD0, 0x4F, 0xAF, 0xB6, 0x7E, 0x7F,
	0x83, 0xBB, 0xF6, 0x7F, 0xDA, 0xF5, 0x36, 0x67,
	0x2F, 0x91, 0x22, 0x82, 0xCE, 0x5B, 0x6F, 0xE6,
	0x62, 0xF7, 0xDD, 0xD3, 0x1D, 0x1D, 0xDB, 0x94,
	0x97, 0xAE, 0x05, 0x6A, 0xB2, 0xD9, 0x78, 0xF4,
	0xE6, 0x4C, 0xD4, 0xE7, 0x54, 0x94, 0x55, 0xA6,
	0x17, 0xBF, 0xB3, 0xD2, 0x1D, 0x11, 0x2E, 0x96,
	0xBE, 0x56, 0x5B, 0x48, 0xEF, 0xAF, 0xF3, 0x94,
	0xFA, 0xFE, 0xC0, 0x23, 0x78, 0xCC, 0xC0, 0x88,
	0xFB, 0x68, 0xB7, 0x4F, 0xC0, 0xE0, 0xE3, 0x8D,
	0x9B, 0xB4, 0x6F, 0x3F, 0x0B, 0xCB, 0x98, 0x6F,
	0xEE, 0xD5, 0x63, 0x38, 0x41, 0xC8, 0xF0, 0x50,
	0x5C, 0xEA, 0xEC, 0xCF, 0xF7, 0x89, 0xAF, 0x55,
	0x30, 0x82, 0xE2, 0x65, 0xBA, 0x97, 0xE7, 0x56,
	0x08, 0x0E, 0x09, 0xB0, 0x73, 0x9A, 0x8F, 0x5B,
	0xBC, 0x74, 0x1C, 0xD3, 0x4B, 0xAC, 0xE7, 0x64,
	0x51, 0x51, 0x45, 0xD4, 0x29, 0x6F, 0x93, 0xCD,
	0xAB, 0x29, 0x92, 0x5F, 0xB9, 0x35, 0xC9, 0x3E,
	0x31, 0x78, 0xDA, 0xBD, 0x21, 0x01, 0xA9, 0xED,
	0x86, 0xE5, 0x81, 0xA1, 0xEC, 0x57, 0xAD, 0x1C,
	0x61, 0x55, 0xCB, 0x75, 0x22, 0xB8, 0xA4, 0x97,
	0xD5, 0xA3, 0xB8, 0x10, 0xE5, 0xFE, 0x67, 0xAE,
	0x07, 0xB6, 0xE6, 0xA6, 0xEA, 0x91, 0x3C, 0xA9,
	0xE1, 0x92, 0xD1, 0xB1, 0xE7, 0xEC, 0xB2, 0xF8,
	0xF1, 0xF5, 0x45, 0xFD, 0xEF, 0xC1, 0x44, 0x72,
	0xB9, 0xE4, 0x6E, 0xAB, 0x45, 0x07, 0x75, 0x3C,
	0x41, 0x69, 0xFD, 0xBA, 0x52, 0xF2, 0x0A, 0x24,
	0x6D, 0xB7, 0xE3, 0xAA, 0xA7, 0x7C, 0x6E, 0xCC,
	0xB8, 0x93, 0x6B, 0x38, 0x20, 0xB1, 0xAF, 0x3B,
	0x5D, 0x7C, 0xD2, 0x5D, 0x40, 0xD1, 0xB2, 0x45,
	0x02, 0xFC, 0x31, 0x8E, 0x1E, 0xF0, 0x59, 0x33,
	0x8D, 0xD3, 0x8E, 0x7C, 0x44, 0xE9, 0xB8, 0xC7,
	0xAA, 0x28, 0x10, 0x43, 0x05, 0x64, 0x03, 0x69,
	0xC2, 0x81, 0x76, 0x66, 0x7D, 0x81, 0x78, 0xE1,
	0x35, 0xBD, 0xA1, 0xD9, 0xD3, 0x7A, 0xF5, 0x46,
	0x1D, 0x36, 0xFB, 0xD3, 0xB8, 0x53, 0x6B, 0x6C,
	0x6B, 0xA0, 0x0D, 0xD3, 0xE7, 0xB4, 0x9C, 0xD0,
	0x69, 0x13, 0xAA, 0x87, 0xCB, 0x4F, 0x6F, 0x98,
	0x27, 0x02, 0x7D, 0x3B, 0x2F, 0x0D, 0x4C, 0x42,
	0xA3, 0xF6, 0xE0, 0xE1, 0xAB, 0x87, 0x57, 0xBA,
	0x4C, 0x50, 0x71, 0x24, 0x00, 0xB7, 0x06, 0xD6,
	0x64, 0xA1, 0xA2, 0xB5, 0x84, 0xB9, 0x81, 0xE5,
	0xA5, 0x2D, 0xCC, 0x28, 0xA1, 0x33, 0xCA, 0x1C,
	0x53, 0x93, 0xAB, 0x27, 0xCC, 0xE6, 0xA1, 0x80,
	0xB5, 0xD0, 0x81, 0xAA, 0x7E, 0x30, 0xA1, 0x59,
	0xED, 0xAA, 0x39, 0x72, 0xAD, 0x3D, 0x26, 0x32,
	0x13, 0xF8, 0x46, 0x1C, 0xDD, 0xD0, 0x71, 0xA4,
	0xAA, 0xBC, 0x71, 0x30, 0xF0, 0x0D, 0x5A, 0x83,
	0x2A, 0x90, 0xB3, 0xF7, 0x49, 0xF5, 0xC5, 0x34,
	0x47, 0xC9, 0xA2, 0x3F, 0x2E, 0xF2, 0xB5, 0x63,
	0x7F, 0x93, 0x2B, 0xF4, 0x4F, 0xDC, 0x5C, 0x3C,
	0x03, 0xEE, 0x30, 0xFD, 0x3E, 0xCC, 0x11, 0x47,
	0xF9, 0x67, 0xEC, 0x82, 0xB9, 0xCD, 0x00, 0x45,
	0x7D, 0x9B, 0x3F, 0x1F, 0x3C, 0x74, 0x82, 0x32,
	0x7B, 0xC5, 0xC0, 0xD2, 0x07, 0xD0, 0xCD, 0xD1,
	0x99, 0x35, 0xC7, 0x86, 0xCD, 0x68, 0x71, 0x25,
	0x47, 0x9F, 0xAD, 0xFA, 0xB4, 0x68, 0xA5, 0xBF,
	0x0D, 0x5A, 0x52, 0x30, 0x3D, 0xC4, 0x28, 0x91,
	0xE9, 0x00, 0x25, 0xF0, 0x27, 0x1D, 0x7A, 0x09,
	0x6A, 0x12, 0xDC, 0x1E, 0x06, 0x75, 0xB0, 0xE7,
	0x6D, 0xAA, 0x88, 0x24, 0x92, 0xCC, 0x55, 0x89,
	0xC0, 0xDC, 0xE3, 0x08, 0x1F, 0x80, 0xC3, 0x41,
	0x42, 0x99, 0x6C, 0x23, 0xE2, 0x2D, 0xB0, 0x54,
	0xFE, 0x8F, 0xC4, 0x9E, 0x7C, 0x30, 0x3C, 0x25,
	0x68, 0xAD, 0xA4, 0x44, 0x9D, 0x69, 0x42, 0x60,
	0x55, 0xC2, 0x7F, 0x6A, 0x18, 0x69, 0x5C, 0x9F,
	0x6E, 0xC0, 0x81, 0x3F, 0x4F, 0xE3, 0x74, 0xAA,
	0xDE, 0xB2, 0x3B, 0xBB, 0x0F, 0x7C, 0x3F, 0xAC,
	0xD6, 0x4F, 0xDE, 0x5F, 0x5C, 0xAF, 0x11, 0xF7,
	0x03, 0x06, 0x3F, 0x7E, 0xFA, 0x7C, 0xBD, 0x8D,
	0x67, 0xAC, 0x91, 0x93, 0x48, 0xCB, 0x5F, 0xE2,
	0xF4, 0x37, 0x47, 0x54, 0x39, 0xFC, 0x2C, 0x83,
	0x44, 0x51, 0x66, 0x1E, 0x05, 0x79, 0x16, 0x8C,
	0xE3, 0x31, 0x9A, 0x38, 0x79, 0xB5, 0xF3, 0xB7,
	0x63, 0x73, 0x1A, 0x83, 0x57, 0xD9, 0x3D, 0x36,
	0x3A, 0x78, 0x16, 0x98, 0xD7, 0xCE, 0x86, 0x85,
	0xD2, 0xE9, 0xF2, 0x98, 0x4D, 0xFC, 0x7B, 0x7B,
	0x96, 0x9F, 0x4A, 0x71, 0x4E, 0x35, 0xB3, 0x0D,
	0x64, 0x2E, 0xE6, 0xB1, 0xF3, 0x0D, 0xA7, 0x7F,
	0xA9, 0xBC, 0x65, 0xDB, 0x2E, 0xE5, 0xBB, 0xC4,
	0x0C, 0x91, 0x9A, 0x70, 0x8F, 0x1F, 0x48, 0xEF,
	0x97, 0xC7, 0xA1, 0xBD, 0x11, 0x1C, 0x30, 0x56,
	0x78, 0xB3, 0xB7, 0x55, 0x8B, 0x5C, 0x4B, 0x54,
	0xE9, 0x5B, 0xB1, 0xBC, 0x5B, 0x8A, 0xCE, 0x26,
	0xAB, 0x85, 0xEB, 0x41, 0x40, 0xFA, 0xB3, 0xE1,
	0x67, 0x53, 0xC4, 0x4F, 0x84, 0xAD, 0xFC, 0x3B,
	0x0F, 0x76, 0x30, 0x09, 0x55, 0xE6, 0x49, 0x99,
	0x0A, 0x4D, 0x65, 0x78, 0x47, 0x18, 0xC0, 0x4A,
	0x46, 0xB9, 0x43, 0x27, 0xBA, 0xEA, 0x2C, 0x6D,
	0xEE, 0xBC, 0x03, 0xAB, 0x01, 0x9F, 0xC0, 0x4A,
	0x8E, 0x7F, 0xAC, 0xCD, 0xFE, 0xA5, 0xB3, 0xCC,
	0xF6, 0xA5, 0x39, 0x18, 0x5B, 0x48, 0x66, 0x8C,
	0xB0, 0x36, 0xE6, 0xC7, 0xA1, 0xF5, 0xCD, 0xA8,
	0x27, 0x0C, 0x65, 0x75, 0xA0, 0x2A, 0x05, 0x21,
	0x21, 0x3E, 0x8A, 0xB2, 0x3D, 0x4C, 0x84, 0x2D,
	0xF5, 0x77, 0xC9, 0x27, 0x3D, 0x7F, 0x04, 0x35,
	0x50, 0x68, 0xC2, 0xA8, 0x26, 0x99, 0xAE, 0x20,
	0x8F, 0xB3, 0xF2, 0x74, 0x1F, 0x7E, 0x30, 0x7F,
	0xC9, 0x1A, 0x8A, 0x7F, 0x82, 0x4B, 0xF3, 0x0C,
	0x1A, 0xF6, 0xA4, 0x37, 0xB3, 0x1F, 0xFE, 0xF4,
	0x23, 0x00, 0xAB, 0x59, 0xF9, 0x74, 0x6B, 0xA7,
	0x63, 0x80, 0x43, 0xA5, 0xC0, 0x23, 0x4A, 0x37,
	0x43, 0xE6, 0x98, 0xCE, 0xF2, 0x49, 0xDF, 0x02,
	0x88, 0x28, 0x4A, 0x13, 0xF0, 0x08, 0x9E, 0x71,
	0xFC, 0x9F, 0xEE, 0xB5, 0x62, 0xC7, 0xD3, 0x50,
	0xB6, 0xC0, 0xA7, 0x06, 0x50, 0x23, 0x03, 0xA3,
	0xFF, 0xD0, 0xD3, 0x9D, 0xFC, 0x64, 0x0C, 0x43,
	0xBF, 0x4F, 0x75, 0x29, 0x9E, 0xAE, 0x4C, 0xFC,
	0x73, 0xB3, 0x18, 0x7F, 0x65, 0x9F, 0xE8, 0xA0,
	0x16, 0x00, 0xC4, 0xFF, 0x5D, 0x26, 0xCA, 0xB5,
	0xAB, 0x31, 0x5B, 0x88, 0xF1, 0x91, 0xAA, 0x2F,
	0xB9, 0x8D, 0xB8, 0x3E, 0xBC, 0x90, 0x85, 0x37,
	0x61, 0x87, 0x94, 0xA2, 0x5C, 0x86, 0x1B, 0x63,
	0x6F, 0x92, 0x2E, 0x41, 0x1F, 0x45, 0x4A, 0x63,
	0xE5, 0x45, 0xD0, 0xBB, 0x68, 0x75, 0x3B, 0xC9,
	0xA5, 0xBC, 0x17, 0xAE, 0x79, 0x36, 0xD3, 0xD6,
	0x8E, 0x31, 0xEE, 0x15, 0x2A, 0xCD, 0x54, 0x6D,
	0xEE, 0x7B, 0x91, 0xDC, 0x37, 0x63, 0xF3, 0xA2,
	0x99, 0x4B, 0xF0, 0x7E, 0x68, 0x6E, 0x42, 0x93,
	0x03, 0x3F, 0xDA, 0x65, 0x38, 0x3E, 0xF8, 0x2A,
	0xBF, 0x54, 0x47, 0xAA, 0x09, 0x2A, 0x0C, 0x5E,
	0xA8, 0xE8, 0x87, 0xF3, 0x9C, 0xBB, 0x6D, 0xA4,
	0xA6, 0x28, 0x0F, 0x1E, 0x6A, 0x23, 0x7C, 0x75,
	0x40, 0x9C, 0xC5, 0x50, 0x72, 0xAF, 0x08, 0xD4,
	0xCE, 0x6C, 0x22, 0x86, 0xC2, 0x46, 0x55, 0x0B,
	0xA0, 0x94, 0xCC, 0x63, 0x23, 0x49, 0x35, 0x50,
	0xB4, 0x88, 0xC2, 0x7F, 0xD1, 0xA8, 0x6F, 0xE3,
	0x10, 0xB0, 0xC1, 0x17, 0xB8, 0xDE, 0x5D, 0x57,
	0xBB, 0x84, 0xCA, 0x9B, 0x43, 0x95, 0x36, 0xF2,
	0xAA, 0x29, 0xA2, 0x91, 0x7C, 0x6C, 0xF1, 0x1F,
	0x8E, 0xC3, 0x3D, 0xEB, 0xDB, 0xC6, 0xE7, 0xC8,
	0x83, 0xB1, 0xEA, 0xF1, 0xB6, 0x51, 0xCB, 0x17,
	0xCD, 0xF6, 0x8D, 0x2F, 0x1C, 0x4B, 0x6C, 0x49,
	0xBF, 0xDC, 0x49, 0x6B, 0x5D, 0x2D, 0x65, 0x33,
	0xB9, 0x0A, 0x25, 0xE1, 0xF0, 0x0B, 0x70, 0x56,
	0x78, 0xF3, 0xFB, 0xBE, 0xC9, 0x4D, 0x89, 0x61,
	0xBA, 0xE6, 0x30, 0xBE, 0xD0, 0x75, 0x47, 0xA8,
	0x75, 0x58, 0x36, 0xD1, 0x7B, 0xEC, 0x5E, 0xB5,
	0x24, 0x33, 0xAD, 0x91, 0x0D, 0x4D, 0xED, 0x48,
	0xF6, 0x19, 0xB8, 0x9F, 0x4E, 0xAC, 0x0B, 0xF7,
	0xB9, 0x5E, 0x4E, 0x89, 0xD4, 0x10, 0xC6, 0x15,
	0x03, 0xCB, 0xA6, 0x3E, 0xEF, 0x09, 0x35, 0x88,
	0x31, 0x51, 0x63, 0x31, 0xBF, 0x4D, 0xAE, 0x04,
	0x2A, 0x96, 0xB8, 0x36, 0x1E, 0x86, 0x3F, 0x1D,
	0x63, 0x25, 0xD0, 0x8F, 0xE4, 0x13, 0xCB, 0xFA,
	0xF2, 0x30, 0x2D, 0x32, 0x87, 0x13, 0x15, 0x76,
	0xB2, 0x0F, 0x15, 0xD4, 0x5E, 0x35, 0x3A, 0x11,
	0x80, 0x4C, 0xA6, 0xCB, 0x7D, 0x4C, 0x17, 0xA3,
	0xB8, 0x6D, 0x49, 0x91, 0x9E, 0x82, 0xED, 0x7D,
	0xFA, 0xEA, 0x17, 0x2E, 0x63, 0x5F, 0x42, 0x85,
	0xF2, 0x8E, 0x83, 0x79, 0xD9, 0xB9, 0xB0, 0xCA,
	0x10, 0xA3, 0x26, 0x6E, 0xB7, 0xD4, 0x34, 0x7E,
	0x35, 0xEC, 0xA6, 0x69, 0x8D, 0x6F, 0x00, 0x5D,
	0x3A, 0x65, 0x86, 0x99, 0xD8, 0x58, 0x92, 0xF3,
	0xEA, 0x00, 0x3F, 0xD5, 0xFF, 0xE2, 0xB6, 0x1E,
	0x61, 0x98, 0xA3, 0x20, 0xEB, 0xA7, 0x1A, 0x2F,
	0x78, 0x97, 0x3F, 0xB1, 0x46, 0x31, 0x5B, 0x0A,
	0xF5, 0xFA, 0xA7, 0x8B, 0xA9, 0x3F, 0x19, 0xE9,
	0xBF, 0x8A, 0x1F, 0x8E, 0x46, 0x20, 0xED, 0x74,
	0xB2, 0xBD, 0x34, 0x5C, 0x1F, 0xC5, 0xF3, 0x9A,
	0x16, 0x93, 0x0D, 0xCB, 0x63, 0x15, 0xF1, 0xC5,
	0xEA, 0x81, 0xFA, 0x01, 0x44, 0xEC, 0xF4, 0x74,
	0xB3, 0xD5, 0x0E, 0x0E, 0x54, 0xB1, 0xC1, 0x01,
	0x53, 0x8D, 0xB0, 0xD7, 0xA8, 0x0A, 0x76, 0x32,
	0x6D, 0x69, 0xEF, 0xF0 };

// Frame(Key=0 TS=6,066/6,032 PTS=3 DTS=2 Pkts=[SLICE] MaxSize=14 MinSize=14)
const uchar testVidFrame4[] = {
	0x00, 0x00, 0x00, 0x01, 0x01, 0x9E, 0x63, 0x44,
	0x33, 0xFF, 0xF3, 0x49, 0x2F, 0x85 };

// Frame(Key=0 TS=6,166/6,066 PTS=6 DTS=3 Pkts=[SLICE] MaxSize=1,664 MinSize=1,664)
const uchar testVidFrame5[] = {
	0x00, 0x00, 0x00, 0x01, 0x41, 0x9A, 0x66, 0x19,
	0x4F, 0x0E, 0xFF, 0x7C, 0x3D, 0xEC, 0xDF, 0x2B,
	0x9C, 0x0F, 0xA6, 0x60, 0xFE, 0xAE, 0xFC, 0xB5,
	0x9A, 0xAF, 0xA2, 0x84, 0x1F, 0x78, 0xB5, 0x5D,
	0xEE, 0xEC, 0x6B, 0x68, 0x77, 0x07, 0xDF, 0x3F,
	0xB7, 0x7C, 0x9B, 0xF9, 0xC2, 0xBF, 0xC5, 0x02,
	0x88, 0x91, 0x0A, 0x84, 0x0A, 0x9E, 0xEA, 0x24,
	0xB8, 0xFF, 0x14, 0xB5, 0x16, 0xA0, 0x37, 0xDA,
	0x96, 0x18, 0x93, 0x04, 0x94, 0x3B, 0xFE, 0xF8,
	0xF6, 0xD8, 0x0F, 0xEC, 0x9F, 0x7B, 0x66, 0x78,
	0x2F, 0xBE, 0xF9, 0x26, 0x44, 0x2E, 0xA3, 0xEA,
	0x63, 0x80, 0x05, 0xDB, 0x5D, 0x8B, 0x9E, 0xCB,
	0xA8, 0x0A, 0xDD, 0xCF, 0x03, 0x54, 0x22, 0x9F,
	0x89, 0x41, 0x52, 0xF6, 0xBD, 0x9D, 0xF1, 0x5F,
	0x19, 0x6F, 0x99, 0xBD, 0x26, 0x6C, 0x25, 0x57,
	0xF7, 0x5A, 0xEE, 0x4B, 0x79, 0xA7, 0x1B, 0x88,
	0x43, 0xA4, 0x69, 0xCE, 0x14, 0xD1, 0xE1, 0xFA,
	0xBD, 0x9A, 0x11, 0x68, 0x0F, 0x80, 0xBF, 0x21,
	0x3C, 0x0C, 0x55, 0x87, 0x00, 0x38, 0x3F, 0x1B,
	0xC4, 0xE2, 0x20, 0xA9, 0x3C, 0x76, 0xA0, 0x99,
	0x40, 0x12, 0x99, 0xAF, 0xBD, 0xE0, 0x89, 0xA4,
	0xFB, 0x99, 0x14, 0xC8, 0x81, 0xF1, 0x85, 0xA7,
	0x8A, 0x2E, 0xCC, 0x59, 0xC5, 0x87, 0xF2, 0x95,
	0xEE, 0x33, 0x70, 0x25, 0xC1, 0x75, 0x37, 0x1C,
	0x73, 0x66, 0xD8, 0x4A, 0xE5, 0xE3, 0xDB, 0xF3,
	0x8A, 0x2D, 0x33, 0x58, 0xA8, 0xB6, 0x7D, 0x14,
	0x36, 0x15, 0x14, 0x42, 0xB7, 0x21, 0x0F, 0xE6,
	0xA9, 0xE0, 0x13, 0x86, 0xD4, 0x0C, 0xDA, 0x3C,
	0x5B, 0x3B, 0x28, 0xAE, 0xEA, 0x50, 0x93, 0x3E,
	0x60, 0x2A, 0xBA, 0x83, 0x19, 0x63, 0xAB, 0x53,
	0x61, 0xA3, 0x25, 0xA6, 0x41, 0x57, 0x20, 0xE6,
	0x92, 0xE3, 0x1D, 0xD3, 0xE2, 0x3F, 0x32, 0xCC,
	0x58, 0x22, 0x14, 0x18, 0xE7, 0x39, 0xD4, 0x5B,
	0xF4, 0xA2, 0xF2, 0xBB, 0x83, 0xB0, 0x58, 0x6C,
	0xD6, 0x73, 0xD2, 0xFD, 0xB5, 0x3C, 0x1C, 0x18,
	0x84, 0xBE, 0x4A, 0x90, 0x42, 0x29, 0x26, 0xF2,
	0x00, 0x46, 0x9F, 0x78, 0x5D, 0xE4, 0x28, 0x4D,
	0x71, 0x00, 0x77, 0x48, 0x45, 0x20, 0xE4, 0x21,
	0x3A, 0x53, 0x2E, 0xCA, 0x42, 0x02, 0xAF, 0xD6,
	0x74, 0x1C, 0x3D, 0xD4, 0x69, 0xEE, 0x27, 0x3F,
	0x71, 0xC9, 0x71, 0xD4, 0x33, 0x65, 0xAB, 0xD4,
	0x05, 0x86, 0x14, 0x76, 0xF3, 0xD4, 0xEE, 0x51,
	0x32, 0x1B, 0xE5, 0x0D, 0x23, 0xE6, 0x3D, 0x0A,
	0xD7, 0x21, 0x69, 0xB6, 0x1E, 0xDA, 0xEE, 0x1E,
	0xC2, 0xF9, 0x27, 0xC7, 0xCD, 0x66, 0xF4, 0x4F,
	0x18, 0x76, 0xCA, 0x45, 0xCF, 0x01, 0xFD, 0x09,
	0x60, 0x96, 0x1C, 0x49, 0x5C, 0x72, 0xBB, 0x55,
	0x12, 0xD4, 0xC4, 0x98, 0x83, 0x92, 0xEB, 0x11,
	0x32, 0xB5, 0xCC, 0x9B, 0x04, 0x15, 0x76, 0x30,
	0xE6, 0x77, 0x33, 0xF2, 0xEE, 0x2F, 0x27, 0x2C,
	0x39, 0x15, 0xFD, 0x6D, 0xB6, 0x1B, 0xBB, 0x35,
	0xC2, 0x9C, 0xA1, 0xF9, 0xC3, 0x68, 0x7F, 0xFF,
	0x8C, 0x63, 0x84, 0xCA, 0x92, 0xC1, 0x5B, 0x00,
	0x97, 0xD7, 0xD7, 0x38, 0xD4, 0xA5, 0x6B, 0x52,
	0xBE, 0xD2, 0x8C, 0x18, 0x23, 0x75, 0xCA, 0x17,
	0xD1, 0x68, 0xC3, 0xB0, 0x8B, 0x6F, 0x78, 0x06,
	0x2C, 0x8D, 0x9B, 0x26, 0xFF, 0x0D, 0xF0, 0x96,
	0xDC, 0x6F, 0x13, 0x19, 0x76, 0x94, 0x64, 0xAB,
	0xAB, 0x2F, 0x48, 0x0E, 0x54, 0xF4, 0x5E, 0xA4,
	0x18, 0xA7, 0xDB, 0x37, 0x9F, 0x55, 0x98, 0xE6,
	0x3B, 0x20, 0xE6, 0x4D, 0x86, 0x6C, 0x5D, 0x83,
	0xD4, 0x22, 0x24, 0x04, 0x16, 0xA1, 0xC2, 0x61,
	0xB2, 0x6B, 0x62, 0x1D, 0x15, 0xE6, 0x0F, 0x3C,
	0x62, 0x02, 0x77, 0x68, 0x76, 0x13, 0xA2, 0x7F,
	0xBC, 0x9F, 0x64, 0xFF, 0xCE, 0x9B, 0x48, 0x55,
	0x35, 0x75, 0x40, 0x6B, 0x6A, 0x5F, 0xE4, 0x9A,
	0xF2, 0x3A, 0x20, 0x4E, 0x3F, 0x8A, 0xF7, 0x16,
	0x2D, 0x59, 0xE3, 0x3D, 0xE9, 0x56, 0x3F, 0x34,
	0x01, 0xC2, 0x7E, 0xDF, 0x75, 0x32, 0xAF, 0x62,
	0x0F, 0x46, 0x16, 0x05, 0xF9, 0x82, 0x68, 0xAC,
	0x19, 0x86, 0xDA, 0x50, 0x45, 0x14, 0xFC, 0xF1,
	0x07, 0xD8, 0xEA, 0x4F, 0x6D, 0xBD, 0x6F, 0x90,
	0x09, 0xB6, 0xD0, 0x54, 0xF8, 0x0F, 0xC3, 0x13,
	0xB9, 0x98, 0x6A, 0xC2, 0x8E, 0x31, 0x6B, 0x42,
	0xDB, 0xD7, 0xC6, 0xF6, 0x6C, 0x26, 0xC5, 0xD5,
	0xAE, 0x8A, 0xD3, 0x80, 0x97, 0x46, 0xB1, 0x55,
	0xA7, 0xD1, 0xCB, 0xDA, 0x9A, 0x27, 0xED, 0x5A,
	0x7E, 0xA6, 0x11, 0xE9, 0xD6, 0xDB, 0x23, 0xFE,
	0x10, 0xD2, 0xF6, 0xD2, 0x23, 0x7B, 0xF5, 0xC5,
	0x1E, 0x3E, 0x68, 0xC0, 0xD8, 0xD6, 0x59, 0x84,
	0x44, 0x93, 0x43, 0x83, 0xF0, 0x6E, 0xCB, 0xF5,
	0xF6, 0xD3, 0x64, 0x07, 0xF1, 0xE3, 0x34, 0x14,
	0xA5, 0x7A, 0x56, 0xDD, 0xDB, 0x7B, 0x66, 0x93,
	0x32, 0xAB, 0x3D, 0xAC, 0xD4, 0x0A, 0x2B, 0x42,
	0xC1, 0xDD, 0xC3, 0x30, 0x60, 0x2A, 0x8A, 0x28,
	0xED, 0x08, 0x12, 0x8D, 0x01, 0xE8, 0x36, 0x54,
	0xDB, 0x83, 0xA8, 0xC1, 0x7C, 0x2B, 0xB5, 0xC2,
	0x7A, 0x8D, 0x97, 0x7B, 0xB9, 0x71, 0x3A, 0x72,
	0x48, 0x11, 0x5F, 0x84, 0x77, 0xBB, 0x22, 0x7E,
	0x98, 0x7E, 0x66, 0xED, 0xF8, 0xA0, 0x9C, 0x5B,
	0x0D, 0x7D, 0xC6, 0x81, 0x41, 0x7A, 0xDF, 0x71,
	0x91, 0x3B, 0xC0, 0x80, 0x96, 0x91, 0xC0, 0x06,
	0x90, 0xE6, 0xF7, 0x78, 0xA1, 0xA2, 0x22, 0x67,
	0xFD, 0x7B, 0x3A, 0xFD, 0xC2, 0xB7, 0x9F, 0x85,
	0x5A, 0xB2, 0xB9, 0x41, 0x61, 0x69, 0x32, 0xCD,
	0x10, 0xE3, 0x31, 0x9B, 0x15, 0x33, 0x6E, 0x6D,
	0x3D, 0x98, 0xF0, 0x07, 0x8D, 0x19, 0x32, 0xBB,
	0x64, 0xF2, 0xCA, 0x2C, 0xDB, 0x76, 0x12, 0x76,
	0xA6, 0x19, 0x48, 0x34, 0xA9, 0xDD, 0x2A, 0x9F,
	0xA2, 0xF6, 0x2E, 0xF6, 0xED, 0xEA, 0x9A, 0x25,
	0x7C, 0xC7, 0x2A, 0xD3, 0xEC, 0xA1, 0x42, 0x7E,
	0xDC, 0xD0, 0x3E, 0x73, 0x72, 0x53, 0xCA, 0x22,
	0xCC, 0xDB, 0x31, 0xD8, 0x30, 0xF7, 0x7C, 0xE1,
	0x47, 0x03, 0x48, 0x5E, 0xD3, 0x1F, 0xEF, 0x37,
	0x12, 0xFB, 0x58, 0x69, 0xCE, 0xD3, 0x1F, 0xA1,
	0xC5, 0xE2, 0x0F, 0x23, 0x31, 0x15, 0xFF, 0x9F,
	0x18, 0x66, 0x62, 0xBD, 0xBB, 0x4F, 0xD5, 0xA9,
	0x41, 0x5B, 0x9B, 0x0E, 0x6A, 0x09, 0x40, 0x2A,
	0x2B, 0xF3, 0x5F, 0x91, 0x80, 0x09, 0xCE, 0x0B,
	0xF0, 0x3D, 0x46, 0x91, 0x2E, 0x00, 0x0A, 0x54,
	0xCD, 0x89, 0x48, 0xC7, 0x33, 0x35, 0xB2, 0xA6,
	0xA6, 0xFB, 0x1C, 0x3F, 0x37, 0x91, 0xD8, 0xE5,
	0x0D, 0xC3, 0x91, 0x90, 0x89, 0x26, 0x52, 0x74,
	0xB6, 0x12, 0x97, 0x44, 0x63, 0x7A, 0xB8, 0x28,
	0xDE, 0x2B, 0x4E, 0x02, 0xC2, 0xAD, 0xAD, 0xDB,
	0x03, 0xED, 0x94, 0xE8, 0xA2, 0x08, 0x6B, 0x58,
	0x17, 0x49, 0x2E, 0x85, 0xA1, 0xC2, 0xF1, 0x04,
	0x73, 0xA2, 0x41, 0x7B, 0x03, 0xB9, 0x5D, 0x2B,
	0xBC, 0x34, 0x52, 0x4A, 0x92, 0x74, 0x08, 0x28,
	0x98, 0xB3, 0x94, 0xE2, 0x96, 0x6F, 0xA9, 0xF7,
	0x19, 0x86, 0x1E, 0xFB, 0x81, 0xC2, 0x4C, 0x46,
	0x37, 0x8E, 0x85, 0xBE, 0x0F, 0x1B, 0x06, 0x61,
	0x71, 0x79, 0xF0, 0x6D, 0x41, 0xAD, 0xF9, 0x73,
	0x75, 0x32, 0x72, 0xA9, 0x9A, 0x33, 0xFD, 0x05,
	0x6E, 0x8F, 0xE8, 0x78, 0x0C, 0xD0, 0xC7, 0x08,
	0x7C, 0xBF, 0x65, 0xA9, 0x21, 0xCA, 0xEF, 0x79,
	0x25, 0xDD, 0xCC, 0x2F, 0x40, 0x38, 0x54, 0xC7,
	0x78, 0xD7, 0x2D, 0x9C, 0xE1, 0x83, 0x1D, 0x10,
	0xA0, 0x74, 0x3B, 0x92, 0xEA, 0x1F, 0x53, 0x3E,
	0x34, 0x98, 0x15, 0xDF, 0x6F, 0xC3, 0x8B, 0xE1,
	0x8C, 0x41, 0x1A, 0x6D, 0xAE, 0x37, 0xD8, 0x05,
	0x29, 0x27, 0x61, 0x1A, 0x64, 0x89, 0x39, 0xCF,
	0xFC, 0x59, 0xC5, 0x53, 0xA7, 0xD2, 0x33, 0xD4,
	0x21, 0x2B, 0x33, 0x92, 0x3C, 0xB3, 0x88, 0xAE,
	0x88, 0xDF, 0x81, 0x52, 0x7D, 0xF3, 0xE5, 0x70,
	0x58, 0xCF, 0x02, 0x0D, 0x51, 0x77, 0xCA, 0xCD,
	0x52, 0xA7, 0x0D, 0x8F, 0xE8, 0x5C, 0x9C, 0xB6,
	0x71, 0xBE, 0x10, 0x01, 0xF2, 0x86, 0x40, 0x91,
	0xED, 0x69, 0xB3, 0x2D, 0x19, 0x52, 0x8C, 0x7B,
	0x81, 0x50, 0x73, 0x99, 0x03, 0x7A, 0x0C, 0xE9,
	0xCF, 0xE1, 0xC5, 0x39, 0xB2, 0xEF, 0xBF, 0x75,
	0x4C, 0x88, 0xD6, 0x9B, 0x50, 0x2B, 0x54, 0x9A,
	0xB3, 0xE5, 0xED, 0xD4, 0xA6, 0x5C, 0xEC, 0x2C,
	0x34, 0xB3, 0x81, 0x78, 0x62, 0x4B, 0x0A, 0x02,
	0x51, 0x91, 0x1A, 0xD1, 0x17, 0xBA, 0x6E, 0xDE,
	0x63, 0x02, 0xA6, 0xFD, 0x60, 0xFC, 0x66, 0xF3,
	0xA7, 0x56, 0xDA, 0xCB, 0x25, 0x98, 0xD7, 0x66,
	0xC0, 0x13, 0x0B, 0x7C, 0x75, 0x48, 0x9A, 0x2E,
	0x05, 0x25, 0xD4, 0x2B, 0x19, 0x6C, 0x04, 0x06,
	0xE7, 0x4E, 0xBA, 0x58, 0xB6, 0x0F, 0x36, 0xCD,
	0x86, 0x3B, 0x4E, 0x4E, 0xD4, 0x50, 0x53, 0x2C,
	0xE8, 0x47, 0x33, 0x82, 0x3B, 0xA4, 0x8B, 0x79,
	0xE7, 0x5D, 0xBF, 0x1B, 0xD1, 0x3C, 0xA4, 0x9A,
	0x88, 0x71, 0xF8, 0x7C, 0xB6, 0x1C, 0x70, 0x32,
	0x36, 0xF8, 0x69, 0xCC, 0x01, 0x84, 0x1B, 0x93,
	0xC3, 0x7E, 0x5F, 0xD5, 0x04, 0x69, 0x30, 0x49,
	0xEC, 0x5B, 0xDF, 0x16, 0x75, 0x0F, 0x8F, 0x65,
	0x76, 0x56, 0x18, 0xFF, 0xC5, 0x02, 0x79, 0x68,
	0x03, 0x18, 0x65, 0x35, 0xD2, 0x35, 0xF6, 0xD4,
	0xDB, 0x96, 0xC8, 0x8C, 0x2D, 0xB0, 0xE3, 0x3B,
	0x80, 0x19, 0x5F, 0x38, 0x84, 0x91, 0xBA, 0xDD,
	0x9F, 0x3A, 0x8B, 0xD2, 0x1F, 0x38, 0xF3, 0x0E,
	0x9A, 0xBE, 0x12, 0xC2, 0x82, 0x19, 0x59, 0x37,
	0x60, 0xD3, 0xE8, 0x80, 0xB1, 0x28, 0x21, 0x7F,
	0xBE, 0xCA, 0x19, 0x17, 0x44, 0xFE, 0x32, 0x5C,
	0x6B, 0xD0, 0xBD, 0xD2, 0xF4, 0x55, 0x73, 0x93,
	0x80, 0xB1, 0x07, 0x00, 0xB8, 0xAA, 0xAA, 0xEA,
	0x69, 0x24, 0x6D, 0x20, 0x2E, 0x64, 0x0B, 0x31,
	0x85, 0x6B, 0xE9, 0xC6, 0xEE, 0xCB, 0xA5, 0xC7,
	0x9E, 0xB3, 0x99, 0x0D, 0x76, 0x05, 0x74, 0x6E,
	0x01, 0xBE, 0x24, 0x13, 0x00, 0x86, 0xB4, 0xF8,
	0xD1, 0x50, 0x56, 0x5E, 0xDB, 0x70, 0x98, 0x37,
	0x1F, 0x9C, 0x83, 0xAA, 0xDE, 0x7C, 0x06, 0x32,
	0xED, 0xAF, 0xC5, 0x0A, 0xCB, 0x23, 0x8F, 0xC7,
	0x0C, 0x89, 0x36, 0x10, 0x40, 0xA6, 0xEC, 0x3B,
	0x8F, 0x32, 0x48, 0x12, 0xF2, 0x5C, 0x35, 0x73,
	0xC9, 0xC8, 0xA6, 0xB8, 0x2E, 0x44, 0xA2, 0x40,
	0x69, 0xE7, 0x99, 0x58, 0x30, 0x44, 0x83, 0x1F,
	0x61, 0x56, 0x66, 0x47, 0xF9, 0x12, 0xA9, 0x15,
	0x0F, 0x49, 0x89, 0x70, 0xFF, 0xB9, 0xDF, 0x44,
	0x71, 0x08, 0xE7, 0x76, 0xFE, 0xB1, 0x56, 0xB2,
	0xCB, 0x60, 0xAB, 0x95, 0x6A, 0x7B, 0x1A, 0x13,
	0xD1, 0xB9, 0xC8, 0x20, 0x91, 0x8F, 0xBE, 0xEC,
	0x5B, 0xF4, 0xA7, 0xD1, 0x6A, 0xA6, 0x1B, 0x44,
	0xE3, 0x9F, 0x39, 0x58, 0x87, 0xA5, 0x64, 0xB3,
	0xA4, 0xF8, 0x28, 0x2F, 0x0B, 0x55, 0x78, 0x36,
	0xF9, 0x68, 0x6F, 0x16, 0xDE, 0x01, 0x17, 0x5D,
	0x12, 0xA0, 0xFB, 0xA2, 0x4F, 0xAC, 0xDC, 0x66,
	0x45, 0xD8, 0xEC, 0x69, 0xB7, 0x8E, 0xE8, 0x71,
	0x52, 0x76, 0x5F, 0xF5, 0x26, 0xB9, 0x13, 0x33,
	0xD3, 0xAE, 0xD2, 0xB9, 0x99, 0x53, 0x0C, 0xE3,
	0xB6, 0xC6, 0x3E, 0xF2, 0x7E, 0x3A, 0xC7, 0x21,
	0xFE, 0x1C, 0xA1, 0x13, 0x1A, 0xA2, 0x88, 0x27,
	0x04, 0xFF, 0x29, 0x94, 0x23, 0xC2, 0x68, 0x7C,
	0x7C, 0x87, 0x9F, 0x50, 0x9F, 0xD5, 0xCA, 0x2A,
	0xB1, 0x46, 0x1D, 0x60, 0xB5, 0xFF, 0x2B, 0xA1,
	0xDC, 0x8B, 0xC3, 0xC0, 0xF2, 0x8C, 0xC0, 0x4B,
	0xB3, 0x84, 0xEB, 0x73, 0x7F, 0xB4, 0x76, 0x9C,
	0x4D, 0x9E, 0x3F, 0x98, 0xA2, 0x5C, 0x5D, 0x6B,
	0x76, 0x75, 0x11, 0x15, 0x78, 0x20, 0xFF, 0x9C,
	0x69, 0x7F, 0x8F, 0x0F, 0x7F, 0x17, 0xB6, 0xCF,
	0xC0, 0xAB, 0xDE, 0x66, 0x15, 0x3F, 0x41, 0x80,
	0xF5, 0x47, 0xEB, 0xE4, 0x3C, 0x00, 0x9B, 0x50,
	0xCC, 0x06, 0xC7, 0xFA, 0xB7, 0x0B, 0xBF, 0x46,
	0xAF, 0xD4, 0xD5, 0xE3, 0x91, 0x83, 0xF0, 0x10,
	0xFA, 0x5B, 0x13, 0xC7, 0x0A, 0xF8, 0x79, 0xE3,
	0x83, 0x2A, 0x97, 0xFA, 0xC3, 0x69, 0xB0, 0xA0,
	0x5B, 0xF4, 0x23, 0xD8, 0x3A, 0x1F, 0x57, 0xC1 };

// Frame(Key=0 TS=6,133/6,100 PTS=5 DTS=4 Pkts=[SLICE] MaxSize=14 MinSize=14)
const uchar testVidFrame6[] = {
	0x00, 0x00, 0x00, 0x01, 0x01, 0x9E, 0x85, 0x44,
	0x2B, 0xFF, 0xF9, 0x7E, 0xC7, 0x6D };

// Frame(Key=0 TS=6,233/6,133 PTS=8 DTS=5 Pkts=[SLICE] MaxSize=14 MinSize=14)
const uchar testVidFrame7[] = {
	0x00, 0x00, 0x00, 0x01, 0x41, 0x9A, 0x88, 0x19,
	0x4F, 0x09, 0xFF, 0xFA, 0x69, 0xB1 };

// Frame(Key=0 TS=6,200/6,167 PTS=7 DTS=6 Pkts=[SLICE] MaxSize=11 MinSize=11)
const uchar testVidFrame8[] = {
	0x00, 0x00, 0x00, 0x01, 0x01, 0x9E, 0xA7, 0x44,
	0x7F, 0x2D, 0x60 };

// Frame(Key=0 TS=6,300/6,200 PTS=10 DTS=7 Pkts=[SLICE] MaxSize=767 MinSize=767)
const uchar testVidFrame9[] = {
	0x00, 0x00, 0x00, 0x01, 0x41, 0x9A, 0xAA, 0x19,
	0x4F, 0x17, 0xFF, 0x00, 0xD4, 0xDC, 0x9E, 0xA6,
	0x8E, 0x29, 0xF4, 0xF9, 0xBA, 0x08, 0x53, 0xDF,
	0x33, 0x82, 0xEA, 0x24, 0x74, 0xED, 0x18, 0xEB,
	0x97, 0x89, 0xF9, 0xFB, 0x13, 0xD8, 0xFB, 0x37,
	0xF7, 0xBE, 0x5F, 0x98, 0xAB, 0x6C, 0x7B, 0x01,
	0x57, 0x62, 0x26, 0x29, 0x85, 0x47, 0xBA, 0x32,
	0x45, 0x09, 0x41, 0xF2, 0x69, 0x54, 0x6C, 0x09,
	0x8B, 0x08, 0x95, 0xDA, 0x36, 0x80, 0x58, 0xC3,
	0x85, 0x1C, 0x8B, 0x50, 0x2B, 0xEC, 0x8C, 0x27,
	0x77, 0xC2, 0xCA, 0xC0, 0x2B, 0x84, 0x53, 0xD2,
	0xE6, 0x1B, 0x41, 0x49, 0x0C, 0xC2, 0x3A, 0x05,
	0xFC, 0xA4, 0xFA, 0xA2, 0x2C, 0x2E, 0x1C, 0x98,
	0xE1, 0xAA, 0x30, 0x8D, 0x0E, 0xDC, 0x2C, 0x42,
	0xBB, 0x69, 0x48, 0x13, 0xEE, 0xC3, 0xC8, 0x4F,
	0xB2, 0x71, 0xA8, 0x8F, 0x48, 0x24, 0x26, 0x4C,
	0x13, 0xD2, 0x9D, 0x84, 0xA2, 0xC2, 0x9F, 0xBD,
	0x28, 0x09, 0x1F, 0xEE, 0xCD, 0xF1, 0xDD, 0xFE,
	0x85, 0x17, 0xFB, 0x04, 0x96, 0x3C, 0x47, 0x8A,
	0x54, 0x30, 0x4E, 0x79, 0x47, 0x5D, 0x36, 0x30,
	0xA0, 0x4B, 0x4C, 0xBC, 0x65, 0xA3, 0x2A, 0x29,
	0x14, 0x92, 0xDD, 0x63, 0x32, 0x46, 0xE3, 0x85,
	0xE5, 0x2D, 0x77, 0xEB, 0xE5, 0x8A, 0xD8, 0x30,
	0x12, 0x72, 0xDD, 0xC7, 0x67, 0x2F, 0x84, 0x03,
	0x19, 0x13, 0x20, 0x39, 0x58, 0xD0, 0x95, 0xC2,
	0xDC, 0xB5, 0x7C, 0xB6, 0x34, 0x71, 0x22, 0x1A,
	0x19, 0xF6, 0xC8, 0xAE, 0xC1, 0xD6, 0xF2, 0xB0,
	0xFF, 0xBA, 0xE9, 0x0A, 0x89, 0xA7, 0x6E, 0x73,
	0xE2, 0xC8, 0x9D, 0x2D, 0xC7, 0x3A, 0xD7, 0xBD,
	0xDA, 0x5F, 0xCF, 0xE3, 0xA9, 0x33, 0x4E, 0x21,
	0x31, 0x9C, 0xBD, 0xF0, 0x9C, 0xE6, 0x5A, 0x2C,
	0x59, 0x9D, 0x80, 0x93, 0xEC, 0x29, 0xBD, 0x37,
	0x49, 0x02, 0x7E, 0x9E, 0x9C, 0x4A, 0xA3, 0x3B,
	0x41, 0x57, 0x88, 0x99, 0xE8, 0x5B, 0x09, 0x50,
	0x36, 0xC4, 0x76, 0xE1, 0x92, 0xDE, 0x34, 0x1B,
	0x81, 0x5B, 0x37, 0x93, 0x33, 0x47, 0xCE, 0x55,
	0x56, 0xB8, 0x9B, 0x3A, 0x38, 0xE9, 0xAE, 0x3F,
	0x8E, 0xB0, 0xEE, 0x13, 0x70, 0x45, 0x95, 0x6F,
	0x73, 0x15, 0xA2, 0xD5, 0xB4, 0x5F, 0x9E, 0xE7,
	0x24, 0x7A, 0x57, 0xA4, 0x4D, 0x05, 0x18, 0xFD,
	0x26, 0x08, 0x7B, 0x3A, 0x4E, 0xB2, 0x29, 0x8F,
	0x22, 0xF2, 0x38, 0x65, 0x75, 0x36, 0x60, 0xA2,
	0xF1, 0xCD, 0x86, 0x04, 0x32, 0x9C, 0x94, 0x0C,
	0x1F, 0xB8, 0x46, 0x05, 0xDF, 0x6E, 0x4E, 0xED,
	0x1F, 0xFF, 0xF2, 0x7C, 0xAB, 0x30, 0x63, 0x6E,
	0x24, 0x85, 0xC1, 0xB1, 0x87, 0x35, 0x43, 0x4B,
	0xE2, 0x35, 0x77, 0xD2, 0x40, 0xD7, 0x42, 0xE4,
	0xB5, 0x9E, 0xFB, 0x19, 0x99, 0x9C, 0xB0, 0x0C,
	0x46, 0x3F, 0x4C, 0xC4, 0xCB, 0x44, 0x57, 0xDE,
	0x3A, 0x2C, 0x3F, 0xA4, 0xCE, 0x04, 0xDA, 0xBB,
	0xB9, 0x83, 0x75, 0x34, 0x20, 0xE5, 0xAB, 0xCB,
	0x54, 0xF1, 0xF8, 0x07, 0x84, 0x3C, 0xEC, 0x07,
	0xEA, 0x07, 0x95, 0x8E, 0xF1, 0xB9, 0xC2, 0xF6,
	0xBF, 0xB5, 0x29, 0x78, 0x89, 0x11, 0x62, 0xAD,
	0x8A, 0x76, 0x03, 0xEE, 0x94, 0x78, 0xB2, 0xF9,
	0xFF, 0xB9, 0xB9, 0x40, 0x42, 0x79, 0x26, 0xEE,
	0x44, 0x8D, 0xCA, 0xCC, 0xA1, 0xBB, 0xCC, 0x7B,
	0x40, 0xFE, 0xEE, 0x17, 0xB7, 0x6C, 0xC5, 0x3C,
	0x00, 0xD4, 0x20, 0x31, 0xED, 0xBE, 0x16, 0x48,
	0x8C, 0xA6, 0x73, 0x7B, 0xBD, 0x78, 0xA5, 0xA5,
	0xF4, 0xB7, 0x26, 0x0C, 0x1C, 0x3F, 0xDC, 0xE7,
	0x7D, 0x41, 0xA7, 0x7E, 0x5E, 0x3B, 0x91, 0x48,
	0xBA, 0x0A, 0x4A, 0xF8, 0x8B, 0xEC, 0xDF, 0x89,
	0x05, 0x93, 0xC7, 0x3B, 0xFA, 0x3B, 0x02, 0xE0,
	0xF9, 0x7A, 0x73, 0xDC, 0x87, 0x94, 0x68, 0x5B,
	0xA8, 0x1D, 0x5B, 0x8A, 0x6F, 0xE5, 0x40, 0x67,
	0x30, 0x1F, 0x0B, 0xF2, 0xA1, 0xCB, 0x4E, 0x5E,
	0x65, 0x07, 0xFB, 0xBF, 0xFD, 0xE5, 0xEE, 0xEE,
	0x72, 0x01, 0x82, 0xC3, 0xB8, 0xA1, 0xCD, 0xA5,
	0x07, 0x39, 0xF5, 0xCC, 0x10, 0x46, 0x9C, 0x60,
	0xCD, 0x31, 0xD9, 0x44, 0x9F, 0x37, 0x45, 0x18,
	0x3F, 0xD1, 0xDC, 0xB9, 0xAF, 0x08, 0x9A, 0x31,
	0x5C, 0x65, 0x19, 0x74, 0x57, 0x5D, 0x96, 0x3B,
	0xF8, 0x6A, 0x9B, 0xF8, 0x05, 0x3F, 0x32, 0x09,
	0x54, 0x73, 0xDD, 0x2F, 0x52, 0xC4, 0x24, 0x70,
	0x89, 0xEE, 0xCC, 0x96, 0xB3, 0x3D, 0x7F, 0x77,
	0x5D, 0x90, 0x04, 0x96, 0x24, 0xBC, 0x2D, 0x9E,
	0x51, 0x48, 0xD9, 0x6B, 0x83, 0xBF, 0x2A, 0xB1,
	0xB6, 0x4D, 0xB8, 0xFC, 0xED, 0xB9, 0xC6, 0xE4,
	0x4A, 0x68, 0x10, 0xD7, 0x99, 0x34, 0xAE, 0xB5,
	0x67, 0xAA, 0x12, 0xC2, 0x60, 0x0B, 0x12, 0xD6,
	0x56, 0x91, 0x3A, 0x9E, 0x58, 0xC0, 0x06, 0xCA,
	0x89, 0x7B, 0x5E, 0x2C, 0x10, 0x8B, 0x7C, 0x7E,
	0xF8, 0x1E, 0x41, 0xAA, 0x42, 0xD6, 0xCC, 0x82,
	0x0E, 0x17, 0x65, 0x40, 0x12, 0x07, 0x23, 0xF7,
	0x7C, 0xCA, 0xBF, 0x2C, 0xA7, 0x46, 0xD3, 0x06,
	0x78, 0x06, 0x45, 0x68, 0xDD, 0x8B, 0xDF, 0xBE,
	0xBA, 0xA0, 0x94, 0xEA, 0x07, 0x64, 0xF8, 0x64,
	0x9E, 0x4B, 0xDC, 0x01, 0xF3, 0x06, 0x60, 0xDC,
	0x59, 0x28, 0x12, 0xD0, 0xF9, 0xB1, 0x3A, 0x3C,
	0xB8, 0x91, 0xF5, 0x3B, 0x73, 0xB7, 0xCA, 0xDF,
	0xBA, 0x0E, 0x7F, 0x7B, 0xA4, 0x94, 0x8C, 0xCF,
	0xF6, 0x0B, 0xBB, 0xF5, 0x98, 0x4A, 0xCC, 0xE8,
	0xA1, 0x3F, 0x36, 0x78, 0x73, 0x04, 0xEE, 0x42,
	0xAA, 0xE0, 0x4D, 0x41, 0x25, 0x03, 0x07, 0xC3,
	0x49, 0x4D, 0xDF, 0xC5, 0x18, 0xBF, 0xE0 };

// Frame(Key=0 TS=6,266/6,232 PTS=9 DTS=8 Pkts=[SLICE] MaxSize=13 MinSize=13)
const uchar testVidFrame10[] = {
	0x00, 0x00, 0x00, 0x01, 0x01, 0x9E, 0xC9, 0x44,
	0xFF, 0xE6, 0x58, 0xC1, 0x81 };

// Frame(Key=0 TS=6,333/6,267 PTS=11 DTS=9 Pkts=[SLICE] MaxSize=12 MinSize=12)
const uchar testVidFrame11[] = {
	0x00, 0x00, 0x00, 0x01, 0x41, 0x9A, 0xCB, 0x18,
	0x9F, 0xFF, 0x01, 0x5B };

//-------------------------------------
// Consolidated

const unsigned int TEST_VIDEO_FRAME_RATE = 30;
const unsigned int NUM_TEST_VIDEO_FRAMES = 12;
const uchar* testVidFrames[] = {
	testVidFrame0, testVidFrame1, testVidFrame2, testVidFrame3,
	testVidFrame4, testVidFrame5, testVidFrame6, testVidFrame7,
	testVidFrame8, testVidFrame9, testVidFrame10, testVidFrame11 };
const unsigned int testVidFrameSizes[] = {
	sizeof(testVidFrame0), sizeof(testVidFrame1), sizeof(testVidFrame2),
	sizeof(testVidFrame3), sizeof(testVidFrame4), sizeof(testVidFrame5),
	sizeof(testVidFrame6), sizeof(testVidFrame7), sizeof(testVidFrame8),
	sizeof(testVidFrame9), sizeof(testVidFrame10), sizeof(testVidFrame11) };
const unsigned int testVidFrameTSDiffs[] = { // = PTS - DTS
	0, 2, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 2 };

//=============================================================================
// Test AAC-LC stream (128 kb/s)

const uchar testAudOob[] = {
	0x12, 0x10 };

// Segment(Key=1 TS=5,366 PTS=0 Pkts=[FRM FRM] MaxSize=823 MinSize=823)
const uchar testAudFrame0A[] = {
	0x21, 0x1A, 0x94, 0xD5, 0xAA, 0xBE, 0x09, 0x08,
	0x32, 0x81, 0xBB, 0x18, 0x52, 0x55, 0xA5, 0x20,
	0x00, 0xA1, 0x7B, 0xC6, 0x0E, 0xCC, 0xA1, 0x06,
	0xCB, 0x94, 0x08, 0x36, 0x57, 0x68, 0x79, 0xDE,
	0x12, 0xEF, 0x7D, 0x0E, 0x2E, 0x49, 0x52, 0x86,
	0x84, 0x32, 0x1E, 0x36, 0x43, 0x82, 0xB5, 0x5B,
	0xB5, 0xFF, 0x5D, 0x72, 0x7F, 0x61, 0x5E, 0xC4,
	0x63, 0xEA, 0x49, 0x7A, 0xFB, 0x5C, 0xAA, 0xC2,
	0xEF, 0x61, 0xC8, 0xAC, 0x8C, 0xB1, 0x38, 0x53,
	0xBA, 0x59, 0x1B, 0xD5, 0xAF, 0x55, 0xEA, 0x5C,
	0xED, 0x4D, 0x33, 0x78, 0x5D, 0x3D, 0xCA, 0x5A,
	0x7B, 0x53, 0x1C, 0xB0, 0x0A, 0x8B, 0x07, 0xF1,
	0xF8, 0x2A, 0x9E, 0x60, 0x83, 0xA7, 0x15, 0x0B,
	0xF8, 0x2B, 0x1D, 0x20, 0x90, 0x55, 0xB0, 0xB2,
	0xFB, 0x9A, 0xAB, 0xDE, 0x06, 0xCD, 0xE8, 0x45,
	0x1D, 0x1A, 0x79, 0x3E, 0x9C, 0x56, 0x8D, 0x65,
	0x46, 0x9A, 0x3D, 0x5D, 0x82, 0x0B, 0x5C, 0xDE,
	0x2B, 0xFA, 0x6D, 0xF9, 0x2C, 0x6B, 0x7C, 0x47,
	0x1A, 0x7F, 0x4D, 0x52, 0x7B, 0xD8, 0x18, 0xE4,
	0x27, 0x4B, 0xAA, 0x4F, 0xE6, 0xF5, 0xA4, 0x91,
	0x99, 0xFB, 0x9B, 0xB9, 0x19, 0x0C, 0xB1, 0xF7,
	0x2F, 0xE4, 0xE4, 0x77, 0x65, 0x0C, 0xB3, 0x8A,
	0xD4, 0xCD, 0xCA, 0x9A, 0x30, 0x66, 0x12, 0x66,
	0x9E, 0xEA, 0x29, 0xEF, 0x1C, 0xDB, 0x6E, 0x36,
	0x5F, 0x0B, 0x91, 0xE5, 0x74, 0xFA, 0x1F, 0x91,
	0xEF, 0x4A, 0x24, 0x2C, 0x6D, 0x30, 0x1E, 0x02,
	0xE7, 0xCE, 0x5F, 0x36, 0x7E, 0x35, 0xCD, 0x2F,
	0xA3, 0x73, 0xA5, 0xBB, 0xAF, 0xAF, 0xC5, 0x6A,
	0x6D, 0x1B, 0x42, 0x72, 0xB9, 0xCD, 0xB3, 0x2E,
	0xEB, 0xEC, 0xB3, 0x7E, 0xA5, 0x72, 0x62, 0xDA,
	0xE4, 0x83, 0x7E, 0x93, 0xC0, 0x91, 0xB5, 0xE2,
	0x05, 0xAE, 0xB8, 0xA4, 0x9B, 0xC7, 0x78, 0x5C,
	0x93, 0x3E, 0x17, 0xB5, 0xD3, 0x59, 0x14, 0x71,
	0xEB, 0x06, 0xC7, 0x33, 0x5D, 0xBC, 0x27, 0x3A,
	0xD1, 0x0E, 0xAE, 0xCB, 0x6B, 0xE2, 0x36, 0xA5,
	0x55, 0x67, 0xDA, 0xE9, 0xAF, 0x47, 0xC6, 0x7A,
	0x65, 0xE7, 0xF6, 0xAF, 0xCB, 0x39, 0xF1, 0x5E,
	0xF4, 0xBE, 0x4E, 0x7B, 0x5B, 0xCA, 0xB2, 0x9B,
	0x7F, 0x29, 0x0B, 0x49, 0xCE, 0x31, 0xCC, 0xCD,
	0xDA, 0xE7, 0x38, 0xF1, 0x58, 0x5A, 0xDF, 0x80,
	0xE8, 0x58, 0x2E, 0x31, 0x69, 0x8F, 0xF4, 0x56,
	0x53, 0xDE, 0x0C, 0xFC, 0xEB, 0x95, 0x78, 0x0B,
	0x0C, 0x95, 0x3B, 0x66, 0x2F, 0x3E, 0x91, 0xDA,
	0xB3, 0x2C, 0x85, 0xC6, 0xDD, 0x90, 0xD8, 0xB3,
	0xBD, 0xBB, 0x42, 0xCB, 0x21, 0x19, 0xD2, 0x69,
	0x42, 0x6C, 0x92, 0x59, 0x9D, 0x63, 0xA8, 0x1B,
	0xE6, 0x31, 0xCF, 0x0E, 0xD3, 0x46, 0x6D, 0xD1,
	0x93, 0xEB, 0x98, 0xE5, 0x98, 0x2A, 0xAD, 0x2F,
	0x11, 0x2A, 0xBE, 0x6A, 0xC3, 0xDD, 0xAE, 0x78,
	0x47, 0xFF, 0x35, 0xCD, 0xAC, 0x96, 0x3E, 0x2D,
	0x8F, 0x07, 0xF1, 0x8F, 0xC1, 0x7A, 0x4F, 0x71,
	0xE8, 0xBB, 0x2F, 0x0F, 0x20, 0x17, 0x01, 0xF5,
	0x8E };
const uchar testAudFrame0B[] = {
	0x21, 0x1A, 0x94, 0xE5, 0xAE, 0xBC, 0xE1, 0x55,
	0xD4, 0x64, 0x55, 0x61, 0x97, 0x0D, 0xB2, 0x69,
	0x0A, 0x81, 0x51, 0x50, 0x09, 0xAE, 0x48, 0x5F,
	0xDD, 0x76, 0x44, 0x6E, 0xEE, 0xAF, 0xDF, 0xFC,
	0xCB, 0xC5, 0xFD, 0xD1, 0x1A, 0xF2, 0x7B, 0x43,
	0xBF, 0x75, 0x63, 0x87, 0x24, 0x1C, 0xDE, 0x53,
	0x81, 0xE9, 0x65, 0xB6, 0x96, 0x25, 0x3E, 0x63,
	0x92, 0x03, 0x5B, 0xDD, 0xDE, 0x57, 0xDB, 0xAB,
	0xE0, 0xD3, 0x47, 0x3C, 0xE5, 0xE6, 0x69, 0x29,
	0xB3, 0x58, 0x3C, 0x4B, 0x03, 0xF1, 0x8F, 0x8D,
	0x74, 0xBA, 0x80, 0x19, 0xA4, 0x15, 0x86, 0xC9,
	0x00, 0x2A, 0x84, 0xEF, 0x6F, 0x29, 0x09, 0xCC,
	0x21, 0xE3, 0x2E, 0xC0, 0x57, 0x32, 0x72, 0x35,
	0x6A, 0xA8, 0xD2, 0xD6, 0x99, 0x7A, 0x73, 0x57,
	0x78, 0x91, 0xB1, 0x42, 0xE1, 0x2C, 0x19, 0x43,
	0x15, 0xD6, 0xA4, 0xF5, 0x1A, 0x3C, 0x64, 0x9E,
	0x42, 0x9A, 0x6B, 0x8A, 0x18, 0x55, 0xAD, 0x71,
	0x72, 0x61, 0xAA, 0xE7, 0xEB, 0x30, 0x8F, 0x9A,
	0x05, 0x57, 0x8C, 0xCD, 0xE5, 0x8F, 0x94, 0x67,
	0x46, 0x76, 0xCC, 0xEE, 0xA6, 0x1E, 0xE7, 0x72,
	0x5F, 0x39, 0xB2, 0xCE, 0x3F, 0x2C, 0x49, 0xEB,
	0x84, 0x6B, 0x20, 0x62, 0xA9, 0x46, 0x1D, 0x9B,
	0x3F, 0xAC, 0x1F, 0xB3, 0xEF, 0x0D, 0x5A, 0xB2,
	0x55, 0x89, 0xBA, 0xDD, 0x29, 0x29, 0x73, 0xCD,
	0xDE, 0x8E, 0xBB, 0x0B, 0x8B, 0xB0, 0xE0, 0xF2,
	0xB6, 0x35, 0x9A, 0xA4, 0x49, 0x31, 0x75, 0xB5,
	0x66, 0x39, 0x2D, 0xCF, 0x3C, 0xCA, 0x7D, 0x03,
	0xE5, 0x36, 0x63, 0xD2, 0x80, 0xCC, 0xA8, 0xD8,
	0xE8, 0xF4, 0x11, 0xDE, 0x5F, 0x19, 0x29, 0xA5,
	0xAC, 0xFA, 0x2E, 0xD5, 0x26, 0xF3, 0xDE, 0xEA,
	0x6C, 0x17, 0xE2, 0x31, 0x30, 0x6D, 0x20, 0x76,
	0xDD, 0x2F, 0x0F, 0xCE, 0x2E, 0x7C, 0x36, 0xD2,
	0xCF, 0x92, 0x8E, 0xBB, 0xC7, 0xF1, 0xDA, 0x37,
	0x8C, 0x7D, 0x3D, 0x4B, 0x62, 0xC0, 0xBB, 0x66,
	0xB2, 0x76, 0xA3, 0x66, 0x54, 0xA5, 0xFE, 0x4D,
	0xF1, 0x06, 0xD1, 0x43, 0x55, 0xC1, 0x9C, 0xC7,
	0x85, 0x96, 0xCA, 0xB6, 0xE5, 0x6E, 0xED, 0x76,
	0xBD, 0x1D, 0x83, 0x44, 0xA3, 0x5C, 0xC0, 0xD1,
	0xBF, 0x67, 0xC9, 0x1B, 0x3E, 0xCF, 0xE7, 0x1A,
	0x46, 0x68, 0x09, 0xBC, 0xC7, 0x31, 0xAD, 0x67,
	0x5A, 0xBD, 0x7A, 0xC5, 0xA5, 0xE8, 0x90, 0xAC,
	0xB9, 0x7D, 0x6D, 0x98, 0x37, 0x81, 0x59, 0x90,
	0x81, 0x12, 0x11, 0x45, 0x6D, 0x35, 0x9C, 0x71,
	0x9F, 0x97, 0x62, 0x78, 0x16, 0x53, 0xB5, 0x19,
	0xCA, 0xAC, 0x25, 0x5E, 0xB1, 0x64, 0xC8, 0x60,
	0x46, 0x92, 0x8F, 0x33, 0x49, 0x81, 0xB2, 0xE1,
	0x3A, 0xEE, 0x4B, 0xB4, 0xAB, 0xD8, 0x8B, 0xE3,
	0x3B, 0xED, 0x52, 0x7F, 0x54, 0x7C, 0xB4, 0x4F,
	0x64, 0x23, 0xFA, 0xF3, 0xFE, 0x24, 0x1D, 0x0F,
	0x45, 0xFE, 0xFE, 0x6E, 0x17, 0xAF, 0xF7, 0x9E,
	0xD8, 0x05, 0xC0, 0x7D, 0x63, 0x07 };

// Segment(Key=1 TS=5,412 PTS=2 Pkts=[FRM] MaxSize=400 MinSize=400)
const uchar testAudFrame1[] = {
	0x21, 0x1A, 0x94, 0xDD, 0x92, 0xBE, 0x67, 0x08,
	0x6E, 0xE8, 0xDC, 0xA6, 0x42, 0xB4, 0x61, 0x52,
	0x20, 0x00, 0x60, 0xCF, 0xD9, 0x8E, 0xDB, 0xBE,
	0xE3, 0xFD, 0xEB, 0x92, 0xFC, 0x33, 0xCB, 0x1B,
	0xAE, 0x9D, 0xC0, 0x6F, 0x58, 0x6C, 0x3F, 0x60,
	0xDD, 0xEB, 0x2E, 0x9F, 0x1D, 0x80, 0xBB, 0x4D,
	0x56, 0xD7, 0x9C, 0x42, 0xDA, 0xEC, 0x6E, 0x01,
	0x5E, 0x5C, 0x1B, 0x28, 0x62, 0xE7, 0xA3, 0x70,
	0x73, 0xF3, 0xB7, 0xF5, 0xD8, 0x6B, 0x2C, 0xF6,
	0x52, 0xD0, 0xFC, 0xA8, 0x7B, 0xD7, 0xA0, 0xC5,
	0xAC, 0xCB, 0xE1, 0x55, 0xAF, 0x8E, 0xBC, 0xD5,
	0xA3, 0xF9, 0xE6, 0xC2, 0x59, 0x1F, 0x31, 0x8A,
	0xDB, 0x5B, 0xD1, 0x56, 0xA6, 0x0E, 0xC0, 0x96,
	0xB6, 0xD6, 0xAE, 0x27, 0x24, 0x8D, 0xFC, 0xC7,
	0x91, 0x18, 0x2A, 0x86, 0x6D, 0x70, 0x71, 0x28,
	0x0B, 0xD5, 0x98, 0x64, 0x81, 0xE2, 0x58, 0x62,
	0x1B, 0xB8, 0xAB, 0xD8, 0x8D, 0xB3, 0x8B, 0x03,
	0x67, 0x83, 0xD1, 0xCC, 0x61, 0x0B, 0x42, 0xFD,
	0x95, 0x67, 0x7A, 0x07, 0x31, 0xB4, 0xD0, 0x39,
	0x76, 0xA5, 0x4D, 0x73, 0x61, 0xCE, 0x75, 0xE1,
	0x02, 0x6E, 0x53, 0xD2, 0xCA, 0xC1, 0x70, 0x90,
	0xEF, 0x6B, 0xC4, 0x84, 0xCA, 0xE1, 0x26, 0xB2,
	0x33, 0x1D, 0x4B, 0x70, 0x93, 0x8E, 0x09, 0x47,
	0x50, 0xE5, 0x29, 0x6B, 0xDD, 0xAD, 0x6C, 0xFD,
	0x4A, 0xB2, 0xDB, 0x15, 0xA6, 0x54, 0xCE, 0xBF,
	0x25, 0x1B, 0x41, 0x5B, 0xB4, 0x19, 0xC3, 0x9A,
	0xD9, 0xAC, 0xBD, 0x25, 0xBC, 0x7C, 0x0A, 0xE9,
	0x16, 0x71, 0xD4, 0x9B, 0x04, 0xA8, 0x3B, 0xAA,
	0x87, 0x61, 0xA3, 0xAE, 0xD9, 0xF5, 0x92, 0x6D,
	0xE6, 0x39, 0xCD, 0x7E, 0x16, 0xB7, 0xB0, 0x68,
	0x19, 0x0E, 0x67, 0x9F, 0x03, 0x78, 0xC9, 0x58,
	0xEE, 0xF6, 0x5D, 0x6E, 0xB1, 0x82, 0xE4, 0x71,
	0xD8, 0x19, 0xCB, 0x77, 0x75, 0x7A, 0xAD, 0xD6,
	0x79, 0x74, 0x9C, 0x35, 0x97, 0x00, 0xCF, 0x63,
	0xBD, 0x40, 0x8F, 0x3F, 0x67, 0x8E, 0xAE, 0xA5,
	0x6E, 0xBB, 0x06, 0xBE, 0xD3, 0x90, 0xA3, 0xEF,
	0x8D, 0xF1, 0xE1, 0x6B, 0x5E, 0x87, 0x13, 0x49,
	0x95, 0xE6, 0x82, 0xF3, 0x3D, 0xF5, 0x2D, 0x6E,
	0x4A, 0xD7, 0x68, 0x36, 0x13, 0xF2, 0x6D, 0x6B,
	0x29, 0x8C, 0xE1, 0xEA, 0xB6, 0x5B, 0x3C, 0x3E,
	0x03, 0x40, 0x4F, 0x3F, 0xEC, 0xAF, 0x10, 0x90,
	0x04, 0xDB, 0xB6, 0xA8, 0xC6, 0xB9, 0xCD, 0x52,
	0x5C, 0xBB, 0xC2, 0xE9, 0xCA, 0xFB, 0xDE, 0x58,
	0x62, 0xCD, 0x63, 0xBC, 0xAD, 0x27, 0x5C, 0xA6,
	0x31, 0x43, 0x6D, 0xCC, 0xB8, 0x6A, 0xEE, 0x6E,
	0xC7, 0x72, 0xF1, 0x93, 0xEB, 0xB4, 0x76, 0x8B,
	0x14, 0x2B, 0x0B, 0xCE, 0x1A, 0x93, 0x00, 0xDE,
	0xC8, 0xF2, 0x2D, 0xBA, 0xB5, 0x86, 0xB9, 0xE1,
	0x6B, 0x0F, 0x3E, 0x0F, 0x27, 0xD5, 0x7B, 0xCF,
	0x4B, 0xE8, 0xB1, 0x80, 0x0B, 0x80, 0xFA, 0xC7 };

// Segment(Key=1 TS=5,435 PTS=3 Pkts=[FRM FRM] MaxSize=764 MinSize=764)
const uchar testAudFrame2A[] = {
	0x21, 0x1A, 0x94, 0xD5, 0xB2, 0x1F, 0x41, 0x82,
	0xD2, 0x04, 0x21, 0x32, 0x98, 0x6E, 0xAA, 0xE3,
	0x6B, 0xA8, 0x08, 0x19, 0x62, 0xA2, 0xBF, 0x61,
	0x18, 0x4A, 0x64, 0xF7, 0x6E, 0x1F, 0x24, 0xBB,
	0x69, 0xBC, 0xA7, 0x85, 0xE9, 0xB8, 0x54, 0x73,
	0xD8, 0x5B, 0x96, 0x9D, 0x73, 0xC3, 0xEF, 0x4A,
	0x76, 0xF5, 0xAF, 0xA6, 0x19, 0x8F, 0x2E, 0xBE,
	0xD3, 0x2C, 0xAD, 0x65, 0x32, 0x33, 0x32, 0x19,
	0x8C, 0xCE, 0xA5, 0x6B, 0xB6, 0xD4, 0xE5, 0x16,
	0x8E, 0xC5, 0x2A, 0xB7, 0x55, 0x43, 0xD5, 0x3A,
	0xEA, 0x69, 0xCB, 0x62, 0x46, 0x46, 0xAF, 0xA5,
	0x46, 0x36, 0xBD, 0xA2, 0xA7, 0x69, 0xB1, 0x59,
	0xBE, 0x84, 0xC6, 0xE9, 0xEF, 0xBE, 0x2F, 0xFB,
	0x77, 0x73, 0xB6, 0xEC, 0x37, 0x99, 0xFC, 0xFC,
	0x30, 0x5C, 0x6E, 0x71, 0xAF, 0x73, 0x2F, 0xB5,
	0xA9, 0xA1, 0x93, 0x7F, 0xD9, 0xFC, 0xBC, 0x86,
	0x7C, 0x57, 0x36, 0x51, 0xFE, 0x79, 0x85, 0x71,
	0x8E, 0x79, 0xF1, 0xB2, 0xAD, 0xEB, 0xEE, 0x32,
	0x6B, 0xF1, 0xE1, 0xDA, 0x53, 0xA5, 0xDF, 0x93,
	0xE2, 0x9B, 0xE3, 0xBA, 0xAB, 0x46, 0x6D, 0x9B,
	0x4F, 0x2C, 0x8E, 0x77, 0x41, 0x59, 0x82, 0x1A,
	0x8D, 0xAC, 0x0E, 0x82, 0x3E, 0x4F, 0xF6, 0x13,
	0x28, 0x5D, 0x51, 0xA7, 0x9D, 0xB0, 0x6C, 0x57,
	0xF6, 0xDE, 0xB4, 0xCF, 0x8B, 0x86, 0x8D, 0x97,
	0xE8, 0xC7, 0xAB, 0xD5, 0x62, 0x9E, 0xC3, 0x1B,
	0x71, 0xAA, 0xE1, 0x72, 0xB5, 0xBA, 0x43, 0xF6,
	0x39, 0x3B, 0x26, 0x15, 0xED, 0xED, 0xBA, 0x1E,
	0x4E, 0xF7, 0x07, 0x2E, 0x34, 0xDB, 0xBF, 0x97,
	0x2A, 0xC8, 0x45, 0x6A, 0x72, 0xF0, 0x03, 0x12,
	0xD8, 0x8D, 0x35, 0xD7, 0x44, 0xC8, 0xD8, 0x09,
	0x2D, 0xF5, 0xDB, 0x7E, 0xB8, 0xAA, 0xE7, 0xAB,
	0xAF, 0xB8, 0x94, 0xCB, 0x4A, 0x27, 0x83, 0xB7,
	0xE8, 0x54, 0xE6, 0x2E, 0x8D, 0xA6, 0xAD, 0x5B,
	0x1F, 0x24, 0x54, 0xBE, 0xEB, 0xF5, 0x0C, 0x36,
	0xE9, 0xA0, 0xC6, 0xDE, 0xE2, 0x4B, 0x77, 0x94,
	0x4A, 0xD9, 0x9E, 0xB3, 0x8A, 0x29, 0xD9, 0x07,
	0xCE, 0xF1, 0x83, 0xA0, 0xD2, 0x8B, 0xDC, 0xED,
	0x71, 0x5A, 0x2B, 0x46, 0xE3, 0xF4, 0xCB, 0x74,
	0x00, 0x77, 0x47, 0xD5, 0xC2, 0x68, 0x9F, 0x1A,
	0x47, 0x50, 0xD7, 0xB4, 0x28, 0x39, 0x00, 0x09,
	0x91, 0xAE, 0xD6, 0x23, 0x5D, 0x48, 0xC0, 0xB1,
	0x2C, 0x1A, 0xB6, 0x99, 0x6D, 0x3B, 0x36, 0x39,
	0x6B, 0x5A, 0xFC, 0xE5, 0xC7, 0x1C, 0x61, 0xE2,
	0xEE, 0x50, 0x0C, 0x25, 0x49, 0xBC, 0x58, 0x70,
	0x54, 0x75, 0x38, 0xFA, 0xF5, 0x8A, 0x8E, 0xBF,
	0x7E, 0xFE, 0xA9, 0xCC, 0x73, 0x6B, 0xAC, 0x7B,
	0x4A, 0x90, 0x9A, 0xA4, 0x13, 0x8B, 0x38, 0xF8,
	0xB3, 0x42, 0xA1, 0x70, 0x1F, 0x58, 0xE0 };
const uchar testAudFrame2B[] = {
	0x21, 0x1A, 0x94, 0xCD, 0x9A, 0xBE, 0x45, 0x08,
	0x53, 0x1C, 0xD0, 0x0A, 0x89, 0x81, 0x09, 0x48,
	0xA9, 0x96, 0xA7, 0x20, 0xE2, 0x77, 0x65, 0xC5,
	0xF4, 0x8B, 0x5C, 0xD1, 0xEF, 0x32, 0xF2, 0x3D,
	0x97, 0xE7, 0xAD, 0xFF, 0x7F, 0xF0, 0xB8, 0xC6,
	0x2F, 0x34, 0xA8, 0x67, 0x10, 0x39, 0x6D, 0x63,
	0x08, 0xFA, 0x8B, 0x68, 0xEB, 0xE8, 0xCC, 0x54,
	0x82, 0xC4, 0xB6, 0x21, 0x24, 0xD9, 0x96, 0x05,
	0x2A, 0xA3, 0x75, 0xDA, 0xFD, 0xA2, 0x15, 0xA5,
	0xE9, 0x79, 0xB0, 0x20, 0x1F, 0xE8, 0xC6, 0x57,
	0x2A, 0x08, 0xB6, 0x26, 0x33, 0x99, 0x1C, 0x63,
	0x51, 0x4A, 0x64, 0xF4, 0xB4, 0xBA, 0x89, 0xA0,
	0x28, 0xD4, 0x42, 0x57, 0xB6, 0x36, 0x91, 0xC3,
	0x85, 0x88, 0xB5, 0x12, 0x68, 0x15, 0x95, 0x57,
	0x98, 0xAE, 0xAF, 0xCE, 0x1F, 0x4E, 0xDD, 0x23,
	0x67, 0x17, 0x96, 0xC1, 0xD2, 0xA7, 0x8C, 0x61,
	0x0E, 0x5B, 0x3C, 0xA2, 0x1C, 0xCB, 0x91, 0x2A,
	0x48, 0x4D, 0xE7, 0xEB, 0x95, 0x7B, 0xEB, 0x84,
	0xD8, 0x5A, 0xF2, 0x93, 0x58, 0xB7, 0x99, 0x09,
	0x43, 0xE0, 0x23, 0x20, 0x36, 0x78, 0xE8, 0x29,
	0x35, 0x96, 0x3A, 0xF3, 0x5C, 0x49, 0x70, 0x92,
	0x76, 0x76, 0x56, 0xDD, 0x1A, 0x31, 0xC9, 0xA4,
	0x80, 0xD5, 0x06, 0x52, 0x61, 0xBB, 0xD2, 0x99,
	0x0E, 0xA9, 0x72, 0xC1, 0xDB, 0x15, 0x59, 0x28,
	0x29, 0x1D, 0xB6, 0x59, 0x3A, 0x72, 0xF5, 0x0F,
	0x69, 0x0A, 0xB9, 0x3A, 0xB4, 0x05, 0x5C, 0x55,
	0x0D, 0x25, 0x88, 0x81, 0xD2, 0x06, 0xA9, 0x29,
	0x7F, 0x8C, 0xC1, 0xB5, 0x4F, 0x97, 0x99, 0x82,
	0xAE, 0x2E, 0xD8, 0x33, 0x4A, 0xC2, 0x8B, 0x41,
	0xB8, 0x06, 0x4B, 0xAF, 0xAE, 0x11, 0xD2, 0x6C,
	0x5F, 0x71, 0x8B, 0x6F, 0x2D, 0x74, 0xF2, 0x76,
	0xB3, 0x69, 0x2D, 0x32, 0xEC, 0x0D, 0xCC, 0x1D,
	0x9A, 0x57, 0xF1, 0xA6, 0x99, 0xB5, 0x72, 0xCE,
	0x82, 0x0B, 0x34, 0xD1, 0x97, 0x01, 0x0B, 0x5C,
	0x9E, 0x4D, 0x5B, 0x79, 0xDF, 0x58, 0xA3, 0x94,
	0x2B, 0x9D, 0x6C, 0xFA, 0xC7, 0x80, 0x7C, 0xA8,
	0xBE, 0x64, 0x31, 0x15, 0x78, 0x98, 0x8D, 0x49,
	0x83, 0xD3, 0x88, 0x90, 0xDB, 0x54, 0x5E, 0x6E,
	0x2C, 0x32, 0x09, 0x2A, 0xB6, 0x1A, 0xF4, 0x7C,
	0xA2, 0xE4, 0x61, 0xED, 0x9B, 0xF9, 0xAC, 0x13,
	0xC6, 0x04, 0x02, 0x12, 0xA5, 0x8C, 0xBB, 0x81,
	0xB4, 0xCD, 0x76, 0x2E, 0x4A, 0x01, 0x93, 0xFE,
	0x10, 0xA5, 0x0D, 0xE0, 0xDE, 0x1C, 0x50, 0xE4,
	0x6C, 0xF1, 0x82, 0xC7, 0x16, 0xBA, 0x1A, 0x74,
	0xC4, 0xED, 0x5E, 0xE0, 0x69, 0x63, 0x35, 0x6E,
	0x3A, 0xAD, 0x40, 0x5B, 0xBC, 0xDA, 0xB3, 0x8F,
	0xEF, 0xF8, 0x74, 0xFF, 0x2D, 0x73, 0xEE, 0xF0,
	0x00, 0xB8, 0x0F, 0xAC, 0x70 };

// Segment(Key=1 TS=5,482 PTS=5 Pkts=[FRM] MaxSize=377 MinSize=377)
const uchar testAudFrame3[] = {
	0x21, 0x1A, 0x94, 0xDD, 0xA6, 0xBE, 0x17, 0x08,
	0x56, 0x8D, 0xFA, 0x2C, 0x55, 0x55, 0xB3, 0x42,
	0x91, 0x28, 0x4A, 0x00, 0x9F, 0xC0, 0xDA, 0xE3,
	0x6B, 0xC5, 0x5A, 0x93, 0x9B, 0x7B, 0x5D, 0xA5,
	0xFB, 0x6D, 0x6D, 0x0F, 0x5C, 0xA1, 0xC1, 0x9C,
	0x3D, 0x1A, 0x35, 0xE3, 0x33, 0x2F, 0xAB, 0x64,
	0xE0, 0x9A, 0xD0, 0x0E, 0xA9, 0x7A, 0x59, 0x36,
	0xD1, 0x18, 0x82, 0x81, 0xDC, 0xD2, 0x51, 0x32,
	0x19, 0xEA, 0xAB, 0x45, 0x53, 0x7F, 0x56, 0xB0,
	0x86, 0x43, 0x36, 0x69, 0x15, 0xD1, 0x96, 0x62,
	0x45, 0x41, 0x06, 0xB2, 0x70, 0xA7, 0xA5, 0x49,
	0xD4, 0x63, 0x14, 0x33, 0x63, 0x02, 0xC5, 0x09,
	0x35, 0xE9, 0xEB, 0x4F, 0x4C, 0xAF, 0xC7, 0xD3,
	0xCA, 0x8C, 0x60, 0xAA, 0x0A, 0x86, 0xA0, 0x2D,
	0x6D, 0x35, 0x7E, 0xB4, 0xBE, 0x5A, 0x4A, 0x12,
	0x5E, 0x97, 0x63, 0x71, 0x4F, 0x72, 0xD7, 0x47,
	0x99, 0x79, 0x5E, 0x64, 0xEA, 0x5A, 0xE0, 0xAF,
	0x92, 0x42, 0x53, 0x0A, 0x7B, 0xC4, 0xC8, 0x55,
	0x97, 0x6D, 0xA9, 0xC8, 0x5C, 0xDD, 0xA2, 0x04,
	0xA4, 0x54, 0xAD, 0xF2, 0xDF, 0x26, 0x83, 0x59,
	0x0A, 0xEA, 0xC1, 0x4D, 0xD6, 0x2C, 0x6D, 0xA3,
	0xD3, 0x5E, 0x0E, 0x14, 0x45, 0x2C, 0xAB, 0x82,
	0xD5, 0x08, 0x7B, 0x92, 0x8E, 0x20, 0xAE, 0x0A,
	0x11, 0x45, 0x5A, 0xAB, 0x89, 0x31, 0x58, 0x7A,
	0x13, 0x21, 0x60, 0x55, 0x3A, 0xFB, 0x9C, 0xC6,
	0x5C, 0x61, 0x2A, 0x6F, 0x52, 0x15, 0x60, 0xDD,
	0x98, 0x8D, 0xBA, 0x7D, 0x1A, 0xCD, 0x3E, 0x5C,
	0x23, 0xED, 0xAD, 0xA3, 0x60, 0xC2, 0x62, 0x10,
	0xC9, 0x8D, 0x2F, 0x9E, 0x2A, 0x3A, 0xDE, 0x35,
	0x55, 0xB5, 0x9C, 0x74, 0x8E, 0xEF, 0x9E, 0xB0,
	0x6C, 0x4A, 0x6D, 0x52, 0x58, 0x4B, 0x05, 0x55,
	0xF3, 0x17, 0x6C, 0xAA, 0xD4, 0x72, 0x45, 0x56,
	0x61, 0x93, 0x6F, 0xCF, 0xA6, 0x6E, 0xA2, 0x87,
	0x9E, 0x36, 0xBA, 0x45, 0x82, 0x35, 0x6A, 0xF3,
	0x51, 0xD2, 0xC6, 0x9B, 0x7F, 0xCA, 0x27, 0xA8,
	0x6F, 0xF1, 0xA6, 0x1E, 0x9E, 0x75, 0xCB, 0x15,
	0xAF, 0x67, 0x65, 0x52, 0xC1, 0xDF, 0xD7, 0x5B,
	0x95, 0x30, 0x67, 0xC2, 0x24, 0x2B, 0x33, 0x2E,
	0x24, 0xE2, 0xEA, 0x55, 0xEA, 0x6C, 0x0B, 0x28,
	0xFA, 0xBB, 0xC3, 0x6A, 0xD3, 0xB6, 0x79, 0xDE,
	0x6D, 0x72, 0xB9, 0xDB, 0xA7, 0xE8, 0x56, 0xC3,
	0x42, 0xB0, 0x86, 0x9D, 0xC7, 0x5A, 0x4D, 0x25,
	0xB3, 0x49, 0x56, 0xEB, 0x2F, 0x4D, 0xA5, 0x43,
	0x3C, 0xD5, 0x07, 0x87, 0xF1, 0x9E, 0x1C, 0xC9,
	0xF2, 0x57, 0xE4, 0x85, 0x53, 0x42, 0x64, 0xC8,
	0x28, 0xD7, 0x9C, 0x7E, 0x07, 0x23, 0xA9, 0xF8,
	0x7D, 0x1E, 0x3F, 0x98, 0x02, 0xE0, 0x3E, 0xB1,
	0xC0 };

// Segment(Key=1 TS=5,505 PTS=6 Pkts=[FRM FRM] MaxSize=723 MinSize=723)
const uchar testAudFrame4A[] = {
	0x21, 0x1A, 0x94, 0xED, 0x4E, 0x27, 0x43, 0x70,
	0xA4, 0x15, 0xBD, 0xC2, 0xA5, 0x01, 0x55, 0x08,
	0xAB, 0xA2, 0x2A, 0x54, 0x36, 0x33, 0xCE, 0x41,
	0x9E, 0xDB, 0x37, 0xEE, 0xE5, 0xF2, 0xDF, 0x61,
	0x84, 0xA5, 0xA2, 0xDA, 0x6C, 0x79, 0xFB, 0xF4,
	0xDA, 0x98, 0x84, 0xA5, 0xCD, 0x90, 0x11, 0x83,
	0x55, 0x8A, 0xA8, 0x33, 0x06, 0x04, 0x43, 0xC3,
	0x12, 0xD1, 0xE9, 0x1B, 0xC5, 0xF2, 0x92, 0xAD,
	0x55, 0x75, 0x16, 0x79, 0x48, 0x50, 0x49, 0x37,
	0x6F, 0x5E, 0x4E, 0x6D, 0x5C, 0x84, 0x34, 0x95,
	0x4E, 0x7F, 0x12, 0x74, 0xC9, 0xD8, 0xF7, 0xE8,
	0xD3, 0xB5, 0xB1, 0x15, 0xDD, 0x1A, 0xE9, 0x88,
	0xCC, 0xBD, 0x12, 0xE5, 0xA3, 0xD9, 0xE9, 0xCF,
	0x45, 0xBC, 0xA6, 0x34, 0x16, 0x42, 0x15, 0x8D,
	0x28, 0x18, 0xA5, 0x50, 0x6D, 0x91, 0x44, 0x02,
	0xEE, 0xE9, 0x37, 0xBB, 0xE6, 0x8F, 0xA4, 0x91,
	0x4D, 0x8C, 0xDA, 0x84, 0xB2, 0x92, 0x4E, 0x35,
	0x94, 0xA3, 0x5D, 0xEA, 0xD0, 0x29, 0x0B, 0x79,
	0x59, 0x5E, 0x2A, 0xFB, 0x1A, 0xFC, 0x66, 0xF9,
	0x99, 0x40, 0x67, 0x83, 0x91, 0x91, 0x91, 0x1F,
	0x0C, 0x6A, 0xC6, 0x31, 0x36, 0xE4, 0x42, 0xF9,
	0x36, 0xD5, 0x96, 0xD3, 0x1B, 0xCE, 0xA9, 0xCA,
	0xDD, 0xB7, 0x5F, 0x17, 0x88, 0x36, 0x58, 0xC9,
	0x63, 0x6A, 0x08, 0x14, 0x56, 0xAD, 0x31, 0x35,
	0xD3, 0xB0, 0x5A, 0xE3, 0xEA, 0x9C, 0x22, 0xF9,
	0xFF, 0xA6, 0x25, 0x3D, 0x28, 0x07, 0x9F, 0x97,
	0xFE, 0xF4, 0x36, 0xD0, 0xC5, 0x14, 0x7F, 0xC3,
	0xAB, 0x16, 0x9C, 0x5A, 0xE8, 0x91, 0xAA, 0x7F,
	0x1A, 0x95, 0x58, 0x55, 0x45, 0x0F, 0x0E, 0x37,
	0x8F, 0x99, 0xFD, 0xD2, 0xCB, 0x69, 0x29, 0x31,
	0xB6, 0x99, 0x59, 0x47, 0xA7, 0x8F, 0xAF, 0xA8,
	0x6A, 0x65, 0x22, 0x60, 0xDC, 0x91, 0x65, 0x71,
	0xE1, 0x77, 0x7C, 0x86, 0xEE, 0xEA, 0x32, 0x63,
	0xD6, 0x6B, 0x2A, 0x74, 0xFB, 0x54, 0x6E, 0x6F,
	0x57, 0xC9, 0x82, 0x94, 0x84, 0x6D, 0xEA, 0xF8,
	0xF1, 0x7C, 0x40, 0x92, 0x37, 0xA3, 0x77, 0x55,
	0x7F, 0x15, 0x68, 0xED, 0x71, 0xEE, 0x32, 0xC1,
	0x78, 0x8C, 0x8A, 0xFD, 0xA4, 0xE4, 0x18, 0xC0,
	0x16, 0x94, 0x98, 0xA9, 0xE5, 0x6A, 0x61, 0xDE,
	0xE3, 0x14, 0x80, 0x58, 0x95, 0x92, 0xE0, 0x2D,
	0x11, 0xE0, 0xC6, 0x35, 0xCD, 0x63, 0xF7, 0x74,
	0x65, 0x57, 0xEF, 0x99, 0x94, 0x19, 0x1B, 0x89,
	0x83, 0x06, 0x64, 0xA3, 0x80, 0x7F, 0x63, 0x13,
	0x20, 0x9C, 0x42, 0x1A, 0x8C, 0xF9, 0x5B, 0xA3,
	0x5F, 0x47, 0x1E, 0xA3, 0x9C, 0x02, 0xE0, 0x3E,
	0xB1, 0xC0 };

const uchar testAudFrame4B[] = {
	0x21, 0x1A, 0x94, 0xD5, 0x2E, 0x3C, 0xE1, 0x52,
	0xA5, 0x18, 0x72, 0x51, 0x59, 0x70, 0x40, 0x4A,
	0x45, 0x25, 0x01, 0x0B, 0xD5, 0x3D, 0x4B, 0x59,
	0x53, 0x1E, 0x0F, 0x49, 0xC6, 0xFF, 0x30, 0xDA,
	0x68, 0x77, 0x8D, 0x67, 0x5A, 0xC7, 0xD7, 0xF8,
	0xC4, 0xEE, 0x9B, 0xCD, 0xDC, 0x65, 0xFC, 0x7E,
	0xC2, 0x44, 0xEB, 0xBB, 0xA8, 0x24, 0x4B, 0xB6,
	0x88, 0x08, 0xD1, 0xB0, 0xDA, 0xD0, 0xC6, 0x95,
	0x4A, 0x9F, 0x60, 0xE1, 0xB0, 0x1A, 0xFD, 0xF4,
	0xEB, 0x54, 0xBA, 0x99, 0x62, 0x0D, 0x15, 0x02,
	0x24, 0x69, 0xAC, 0x50, 0x88, 0x86, 0xD6, 0x25,
	0x62, 0x07, 0x9F, 0x77, 0x12, 0x31, 0xDD, 0x4F,
	0x51, 0xDF, 0xA7, 0x4D, 0x06, 0x28, 0xC9, 0xD6,
	0xD1, 0x76, 0x58, 0x3A, 0x48, 0xE1, 0x91, 0x45,
	0x34, 0x9A, 0x5D, 0xB9, 0xA6, 0x70, 0x9B, 0x26,
	0x76, 0x93, 0x7B, 0x45, 0xBB, 0xC1, 0x8B, 0xA0,
	0xD6, 0xCD, 0xCB, 0xC1, 0x56, 0x3F, 0x15, 0xC5,
	0x2F, 0x26, 0xDA, 0xF1, 0x56, 0xDC, 0x09, 0x1A,
	0x51, 0x91, 0x6A, 0x92, 0x9F, 0x42, 0xB6, 0xA6,
	0x9A, 0x61, 0xB6, 0x26, 0x5C, 0x08, 0x7C, 0x19,
	0xE0, 0xAA, 0xAB, 0x9D, 0x53, 0x91, 0xC7, 0x73,
	0x5B, 0x57, 0xB9, 0x85, 0x37, 0xA4, 0x1F, 0x6D,
	0x76, 0x86, 0xED, 0x29, 0x6F, 0x48, 0xC6, 0x6F,
	0xD4, 0xDD, 0xDB, 0xA5, 0xD5, 0x8D, 0xA5, 0xB0,
	0xC9, 0x95, 0xB3, 0xFB, 0x89, 0xEE, 0x32, 0xF3,
	0xAE, 0x38, 0xF6, 0x26, 0x23, 0x63, 0x41, 0x11,
	0xD1, 0x91, 0xC4, 0x99, 0x3B, 0x87, 0xB4, 0x32,
	0xA8, 0x0E, 0xD2, 0xF2, 0x0C, 0xCE, 0xC5, 0x37,
	0xAA, 0x0B, 0xA0, 0x62, 0xE8, 0xE5, 0x4E, 0xC4,
	0x23, 0x22, 0x86, 0x83, 0x69, 0xBB, 0x83, 0x04,
	0xAC, 0xFE, 0xCA, 0xEA, 0xEF, 0x17, 0x2B, 0x49,
	0xC5, 0x4F, 0x65, 0xCD, 0x83, 0x43, 0x53, 0x99,
	0xAA, 0xCF, 0x37, 0xE7, 0x2F, 0x64, 0xEF, 0x46,
	0x77, 0x3A, 0x2C, 0x9A, 0xF9, 0x39, 0x78, 0x72,
	0x76, 0xB7, 0xEE, 0x24, 0xE8, 0xDB, 0xB2, 0x91,
	0x9F, 0x2F, 0x2F, 0x73, 0xE3, 0xFD, 0x66, 0xD4,
	0xE0, 0xD2, 0x6D, 0xA8, 0x41, 0xA9, 0xD9, 0x72,
	0x3D, 0xD4, 0xEF, 0x4E, 0xD7, 0xE4, 0xED, 0x9A,
	0xB4, 0xB5, 0x22, 0xE6, 0x19, 0x5B, 0xBC, 0x6D,
	0x2C, 0x1B, 0xD8, 0xD5, 0x9D, 0x21, 0x4F, 0x96,
	0xF1, 0xBB, 0x7D, 0x8A, 0x48, 0xD1, 0xB4, 0xD3,
	0x36, 0x34, 0xC7, 0x13, 0xD2, 0xC3, 0x7B, 0x6C,
	0x54, 0x5B, 0x0C, 0x6C, 0xAD, 0xBE, 0xA9, 0xAD,
	0xB8, 0x27, 0x11, 0xCD, 0xD7, 0x78, 0x7D, 0xA7,
	0x13, 0xE8, 0xF7, 0xB0, 0x01, 0x70, 0x1F, 0x58,
	0xE0 };

// Segment(Key=1 TS=5,551 PTS=8 Pkts=[FRM] MaxSize=347 MinSize=347)
const uchar testAudFrame5[] = {
	0x21, 0x1A, 0x94, 0xCD, 0xA6, 0x3E, 0x11, 0x08,
	0x07, 0x6D, 0xE0, 0x19, 0x20, 0x49, 0x90, 0x14,
	0x22, 0xBF, 0x23, 0xFB, 0x9A, 0xB3, 0x88, 0x56,
	0x81, 0xDD, 0x3C, 0xA9, 0xA7, 0x3F, 0x31, 0x7F,
	0x95, 0xDB, 0xD8, 0xBE, 0xA5, 0xBD, 0x7E, 0x3B,
	0xA7, 0x77, 0x14, 0x17, 0x61, 0xBB, 0xD7, 0x48,
	0xEA, 0xDF, 0x43, 0x1A, 0x78, 0x6A, 0xEF, 0xF1,
	0x55, 0x13, 0x29, 0xD4, 0x99, 0x97, 0x7A, 0x85,
	0x53, 0x1C, 0xC9, 0x11, 0x83, 0x46, 0xA2, 0x9C,
	0xCA, 0x04, 0xB4, 0x82, 0x6C, 0xC7, 0x68, 0xF1,
	0x5D, 0x40, 0xA9, 0x2C, 0xD6, 0x5E, 0xA1, 0x1A,
	0xF6, 0x34, 0x6D, 0x9D, 0xC0, 0x89, 0x66, 0xDA,
	0x2B, 0x56, 0x79, 0xF0, 0x29, 0xB8, 0xD1, 0x49,
	0x4A, 0x8E, 0x31, 0xD0, 0x66, 0xC3, 0x61, 0x97,
	0xD7, 0x23, 0x55, 0x0B, 0xD2, 0xCA, 0xD0, 0xAA,
	0xDF, 0x8E, 0x7C, 0x19, 0x93, 0x32, 0x6E, 0x18,
	0x05, 0x1D, 0x34, 0xFE, 0xC9, 0x86, 0x82, 0x2A,
	0x4D, 0x25, 0x05, 0x8D, 0x76, 0x54, 0x09, 0x1D,
	0x29, 0x75, 0xC0, 0xBE, 0x9C, 0xF2, 0xEC, 0xF7,
	0x92, 0x91, 0x93, 0x77, 0xAC, 0xAC, 0x82, 0x46,
	0x3D, 0xAC, 0x58, 0xB4, 0x15, 0x26, 0x79, 0xE3,
	0xE6, 0xE7, 0x57, 0x91, 0xF8, 0x2E, 0xA5, 0x9D,
	0xD4, 0x86, 0x35, 0xFD, 0x8E, 0xDE, 0x97, 0x02,
	0x83, 0x29, 0xCE, 0xBE, 0x5C, 0x59, 0x3A, 0x2C,
	0x7D, 0x93, 0x71, 0x6B, 0x6B, 0x19, 0xB5, 0xEF,
	0x5D, 0xD9, 0xEA, 0x10, 0xCD, 0xF1, 0x48, 0x9F,
	0x67, 0x6F, 0x9C, 0x9B, 0x7D, 0xCD, 0xC7, 0x18,
	0x1D, 0x8A, 0x8C, 0xB4, 0x4B, 0x9B, 0x6E, 0xAF,
	0x95, 0x12, 0xFC, 0xD2, 0x3E, 0x25, 0x82, 0x95,
	0xDE, 0x93, 0x41, 0x70, 0x87, 0x4F, 0x59, 0xBF,
	0xB2, 0xC3, 0x75, 0xD2, 0x5C, 0x6E, 0x5C, 0x8A,
	0x7B, 0xF1, 0xD1, 0x2A, 0x2D, 0x26, 0xED, 0xD3,
	0x82, 0x83, 0xF1, 0xEA, 0xB0, 0xC3, 0xD9, 0x47,
	0xD3, 0xD0, 0x8F, 0x7E, 0x9D, 0x43, 0xD1, 0xAC,
	0x6E, 0x11, 0x2B, 0xC7, 0x8F, 0x7E, 0x90, 0x64,
	0xA5, 0x18, 0x38, 0x94, 0xB2, 0xBC, 0x64, 0x12,
	0xC8, 0x57, 0x36, 0xAA, 0x32, 0xAA, 0x21, 0xB1,
	0x28, 0xAC, 0x0C, 0x8F, 0x67, 0x6D, 0x07, 0xD1,
	0x71, 0x5B, 0x46, 0xDF, 0x7B, 0x01, 0x37, 0x3A,
	0xE7, 0x4F, 0xD0, 0x54, 0xD0, 0x91, 0xD1, 0x0C,
	0x34, 0xAA, 0x6A, 0x71, 0xD3, 0x96, 0x74, 0xAE,
	0x93, 0xC3, 0x25, 0xB6, 0x30, 0xD0, 0x99, 0xB7,
	0xA9, 0xAC, 0x98, 0xB8, 0xC7, 0xED, 0x8C, 0x2E,
	0x03, 0xEB, 0x1C };

// Segment(Key=1 TS=5,574 PTS=9 Pkts=[FRM FRM] MaxSize=702 MinSize=702)
const uchar testAudFrame6A[] = {
	0x21, 0x1A, 0x94, 0xD5, 0xB2, 0x31, 0x41, 0x82,
	0x38, 0x46, 0xC6, 0x94, 0xE5, 0xDD, 0x46, 0x5D,
	0x42, 0x65, 0x8A, 0xBA, 0x80, 0xA2, 0x84, 0xF3,
	0x5B, 0x81, 0xBF, 0xA4, 0x71, 0x4D, 0xF9, 0xC7,
	0xE9, 0x26, 0xCA, 0xA3, 0xA1, 0xAC, 0x0A, 0x3E,
	0x9A, 0x9B, 0xB1, 0x01, 0xEA, 0x8E, 0x33, 0x8B,
	0xD2, 0x5F, 0x05, 0xCD, 0x03, 0xD1, 0xD0, 0x1F,
	0x7A, 0xD3, 0x4A, 0xA0, 0x6C, 0xC8, 0xB9, 0x22,
	0x4D, 0xEA, 0xEB, 0x21, 0x1A, 0x14, 0x6C, 0x87,
	0x1E, 0x7B, 0x77, 0xC9, 0x85, 0x64, 0x4C, 0x9D,
	0x40, 0x42, 0x6E, 0xED, 0xE7, 0xD3, 0x3D, 0xE2,
	0x11, 0x82, 0x7C, 0xB3, 0xD4, 0xCC, 0x14, 0x7A,
	0xFF, 0x12, 0xE4, 0xD4, 0xDB, 0x93, 0x30, 0x2C,
	0x0E, 0xDE, 0x4A, 0x23, 0x2E, 0x23, 0x64, 0x4F,
	0x46, 0x4E, 0x12, 0xA4, 0x93, 0x82, 0x00, 0x17,
	0x45, 0x1A, 0x89, 0xB6, 0x12, 0x2D, 0x0B, 0xA5,
	0x61, 0x50, 0x62, 0x66, 0x53, 0x31, 0xEB, 0xEB,
	0x8B, 0x6A, 0xE9, 0x83, 0x8A, 0xAC, 0xA9, 0x1B,
	0xD3, 0xA9, 0x68, 0xB2, 0xBB, 0x9B, 0x92, 0x2E,
	0x29, 0xE8, 0xCF, 0x70, 0xEC, 0x2F, 0x35, 0x71,
	0x1A, 0x49, 0x10, 0x3D, 0x7C, 0xA3, 0x27, 0x1C,
	0xCD, 0xBA, 0x32, 0xE8, 0xD5, 0x50, 0x3A, 0x3D,
	0xE4, 0x49, 0x82, 0x9D, 0x7D, 0xC0, 0x6B, 0xAF,
	0xA5, 0x64, 0x74, 0x5A, 0xD9, 0x6B, 0x2E, 0x08,
	0x4F, 0xBC, 0x2A, 0xB1, 0x47, 0xD2, 0x75, 0xA9,
	0x91, 0x1A, 0xA3, 0x8E, 0x74, 0x4B, 0xED, 0xC9,
	0xA8, 0x95, 0x72, 0x8D, 0x7E, 0xA2, 0xAF, 0x56,
	0xF6, 0xAA, 0xC9, 0x9D, 0xD4, 0xFA, 0x6C, 0xFB,
	0x95, 0x52, 0x78, 0x57, 0x89, 0xB3, 0xA1, 0x6F,
	0x3A, 0xB5, 0x16, 0x36, 0xBD, 0xBF, 0x06, 0x2D,
	0x65, 0x06, 0xA7, 0xE2, 0xE3, 0x5D, 0x48, 0x99,
	0x3E, 0x99, 0xE0, 0xC8, 0x34, 0x28, 0x56, 0xC8,
	0xA3, 0x37, 0x1D, 0x3E, 0x0E, 0xD0, 0x33, 0xEE,
	0x3B, 0x4B, 0x1B, 0x48, 0xD7, 0x4E, 0xB7, 0xA2,
	0x97, 0xBE, 0x42, 0x91, 0x58, 0x9F, 0x6C, 0xAD,
	0xB1, 0xA9, 0x18, 0x62, 0x49, 0x48, 0x58, 0xA4,
	0xA0, 0x4E, 0x0B, 0x2D, 0x75, 0x34, 0x89, 0x7B,
	0x4F, 0x3B, 0x03, 0x31, 0x6D, 0x1B, 0xC4, 0x7E,
	0xF4, 0xFB, 0x0A, 0xA9, 0x4F, 0x25, 0x03, 0x96,
	0x96, 0x0B, 0x99, 0xD9, 0xD1, 0xB5, 0x51, 0xA7,
	0x48, 0xBE, 0xEA, 0x11, 0xB4, 0xF6, 0x9C, 0x4F,
	0x71, 0xA4, 0x07, 0xA9, 0x61, 0xAD, 0x06, 0xA8,
	0x8C, 0x9C, 0x34, 0x38, 0x1B, 0x34, 0x7A, 0x8F,
	0x1E, 0x40, 0x2E, 0x03, 0xEB, 0x1C };
const uchar testAudFrame6B[] = {
	0x21, 0x1A, 0x94, 0xE5, 0x4A, 0x2E, 0xE1, 0x66,
	0x8A, 0xE6, 0xB7, 0xD0, 0x32, 0x95, 0x44, 0xA2,
	0x55, 0xD2, 0x64, 0x86, 0x58, 0x1B, 0xF5, 0xB7,
	0xE9, 0x70, 0x57, 0x7F, 0x54, 0xD7, 0xE3, 0xFD,
	0xDB, 0xDA, 0xED, 0xAC, 0x76, 0xCD, 0x0A, 0x03,
	0x06, 0x1D, 0x56, 0x42, 0xE7, 0x4A, 0x52, 0xAD,
	0xBE, 0x4D, 0x8B, 0x61, 0x5E, 0xD8, 0x91, 0x2E,
	0xCF, 0x06, 0x57, 0x76, 0xCE, 0x63, 0xEC, 0xEF,
	0x9E, 0x81, 0x53, 0xF4, 0x34, 0x7B, 0x31, 0x9B,
	0x2C, 0x11, 0x85, 0xF1, 0x0A, 0x70, 0x36, 0xCB,
	0x93, 0xA9, 0x89, 0x28, 0x12, 0x92, 0x93, 0x6F,
	0xAB, 0x9A, 0xC4, 0x8A, 0xDA, 0x48, 0x15, 0x3A,
	0x6C, 0x5D, 0xE9, 0x6C, 0xD2, 0xAE, 0x05, 0xAE,
	0x45, 0x5C, 0x73, 0x64, 0x3C, 0x6A, 0x71, 0xF0,
	0x44, 0x12, 0x76, 0xB4, 0xA0, 0x7F, 0x1A, 0x0D,
	0x0C, 0x3B, 0x0A, 0x96, 0xE3, 0xE1, 0x8F, 0x7E,
	0x84, 0x13, 0x38, 0xF2, 0x9B, 0x0C, 0xB8, 0x6C,
	0xC6, 0x4D, 0x5C, 0x7C, 0xB1, 0x30, 0xFC, 0xB1,
	0x10, 0xDD, 0x92, 0xDD, 0x24, 0x87, 0xF7, 0x8A,
	0x90, 0xBB, 0x1A, 0xA9, 0x76, 0x84, 0x45, 0x2E,
	0xA7, 0x12, 0x9F, 0x22, 0x6C, 0x45, 0xEE, 0xDD,
	0x6B, 0x6D, 0x95, 0x35, 0x27, 0x3C, 0x46, 0xEB,
	0x2A, 0x71, 0x11, 0x77, 0xE0, 0x89, 0x3E, 0xA8,
	0x72, 0x92, 0x82, 0xB2, 0x4D, 0x87, 0x04, 0x11,
	0x2C, 0xF9, 0x32, 0xE1, 0x92, 0xC6, 0x95, 0x9E,
	0xC1, 0x8A, 0x12, 0xED, 0x64, 0xBF, 0xDB, 0xE8,
	0x74, 0x71, 0xB4, 0x44, 0x3D, 0x7E, 0x41, 0xCD,
	0xB2, 0x6F, 0x89, 0x05, 0x5B, 0x21, 0x48, 0x9B,
	0x13, 0x72, 0x38, 0xEC, 0x88, 0xC5, 0x48, 0xFB,
	0xDA, 0x78, 0x07, 0x4F, 0x6F, 0x4D, 0x0A, 0x68,
	0x69, 0x23, 0x16, 0x79, 0x8D, 0x3F, 0x93, 0x4E,
	0xCB, 0x14, 0x80, 0x53, 0xB4, 0x26, 0x34, 0x27,
	0xCA, 0x67, 0x26, 0xEE, 0xCD, 0xB4, 0x4A, 0x47,
	0x6F, 0xB4, 0xBD, 0x2F, 0x57, 0x3F, 0x12, 0x77,
	0x8B, 0x41, 0x27, 0x5E, 0x55, 0xC0, 0xB8, 0x3B,
	0x11, 0x95, 0x13, 0x92, 0x9D, 0xB1, 0xA5, 0xF0,
	0x53, 0xBC, 0x4F, 0x8E, 0x2A, 0x11, 0xAC, 0xAB,
	0x07, 0x7E, 0xEC, 0x71, 0x6A, 0xF6, 0x18, 0x28,
	0xF7, 0x17, 0x5D, 0xE9, 0x74, 0xF9, 0x72, 0xF6,
	0x7B, 0x5C, 0xA4, 0x90, 0xBB, 0x61, 0x43, 0xC9,
	0xD6, 0x59, 0xD3, 0x9B, 0xD3, 0x4F, 0x1B, 0x17,
	0x79, 0xBE, 0xBD, 0x18, 0x62, 0xAB, 0x16, 0x3E,
	0xD8, 0x02, 0xF8, 0x9D, 0x77, 0x83, 0xC3, 0xF0,
	0x7F, 0xC1, 0xC1, 0x90, 0x0B, 0x80, 0xFA, 0xC7 };

// Segment(Key=1 TS=5,621 PTS=11 Pkts=[FRM] MaxSize=348 MinSize=348)
const uchar testAudFrame7[] = {
	0x21, 0x1A, 0x94, 0xED, 0xA6, 0x3E, 0x17, 0x0B,
	0x55, 0x92, 0xAF, 0x1B, 0xDE, 0x2A, 0x20, 0xC6,
	0xA9, 0x02, 0xAE, 0xA0, 0x0A, 0x1E, 0x13, 0x5E,
	0x6A, 0x7A, 0x76, 0x33, 0xA3, 0xDE, 0x33, 0xCB,
	0xB2, 0x9C, 0x74, 0x6E, 0xFB, 0xCE, 0x63, 0x17,
	0x64, 0x30, 0xFC, 0xEE, 0xB2, 0x8B, 0xD7, 0xEC,
	0x22, 0x05, 0x08, 0x6A, 0x95, 0x7D, 0x99, 0x8F,
	0xCA, 0x4E, 0xD0, 0x80, 0xCA, 0x9A, 0x59, 0xD7,
	0x91, 0xC7, 0x00, 0x1D, 0x19, 0xA7, 0xA6, 0xD6,
	0x70, 0xA4, 0x4D, 0x65, 0x00, 0xCB, 0x31, 0x6C,
	0xA5, 0xBE, 0x39, 0x48, 0x42, 0xFD, 0x58, 0xA0,
	0x66, 0xFC, 0xE7, 0xE2, 0x60, 0x60, 0xF2, 0x50,
	0xA8, 0xA6, 0xCD, 0x0C, 0x11, 0xD3, 0xB8, 0x9A,
	0xB8, 0x21, 0x6A, 0x88, 0x6D, 0x9C, 0x47, 0x14,
	0x55, 0x48, 0xD3, 0x44, 0x45, 0x8B, 0x90, 0x49,
	0xB7, 0x8B, 0xAA, 0xAA, 0xB1, 0x8A, 0x86, 0xB0,
	0xC7, 0x27, 0x7B, 0x4E, 0x0B, 0x9B, 0x0B, 0x28,
	0x09, 0x0D, 0xAE, 0x82, 0xE7, 0x41, 0x67, 0x56,
	0x79, 0xE4, 0x35, 0x1A, 0xDD, 0xBD, 0x21, 0x51,
	0x11, 0xCF, 0xA8, 0xAC, 0xE5, 0x58, 0xCD, 0xCB,
	0xAA, 0x62, 0xB0, 0x4C, 0x83, 0x18, 0x22, 0x9B,
	0xAC, 0xAA, 0x33, 0x39, 0xF1, 0x7B, 0xD5, 0xB8,
	0x0E, 0xCE, 0x1B, 0xE9, 0xD3, 0x97, 0x38, 0x31,
	0x80, 0xB7, 0xEC, 0x66, 0x6F, 0x58, 0x9B, 0x61,
	0x5D, 0xF7, 0x59, 0xA9, 0xCA, 0x42, 0xA6, 0xDE,
	0xF4, 0x5D, 0x6D, 0xAD, 0x44, 0xCA, 0xC1, 0xDA,
	0xC5, 0x0F, 0x02, 0xDF, 0x6C, 0xF8, 0xF2, 0x98,
	0xEF, 0xC1, 0x94, 0x5E, 0xE1, 0x2C, 0x17, 0xCB,
	0x7B, 0x5D, 0x2B, 0x03, 0x6C, 0xED, 0x65, 0x59,
	0x17, 0x57, 0x58, 0x69, 0xF5, 0x4C, 0x3E, 0xBC,
	0xB2, 0x35, 0xBB, 0x6F, 0x03, 0x1E, 0x88, 0xAC,
	0xD7, 0xD2, 0xA4, 0xA0, 0xDC, 0xBE, 0x5E, 0x47,
	0x5B, 0x52, 0x34, 0x29, 0xEE, 0xE1, 0xBD, 0x4E,
	0x49, 0xE3, 0x37, 0x5B, 0x75, 0x16, 0x19, 0x15,
	0x6C, 0xDA, 0x6F, 0x95, 0x1B, 0x6B, 0x97, 0xDF,
	0xF5, 0xC7, 0x71, 0xDB, 0x69, 0x62, 0xF0, 0x36,
	0x35, 0x12, 0xFA, 0xFA, 0xDA, 0x5A, 0xC4, 0xA4,
	0xF1, 0x64, 0x88, 0xA8, 0xF6, 0x21, 0x99, 0x45,
	0x2F, 0x12, 0x5A, 0xCB, 0xF4, 0xA6, 0xBF, 0x3B,
	0x72, 0x53, 0xD4, 0x52, 0xB1, 0xC6, 0x42, 0xCC,
	0x88, 0x9B, 0xFA, 0xB8, 0xEC, 0xCA, 0xA3, 0x61,
	0xE3, 0x0B, 0xE5, 0xE5, 0x48, 0x87, 0x65, 0xD1,
	0xD1, 0x7D, 0xA7, 0x1F, 0x5B, 0x8B, 0xE7, 0x00,
	0xB8, 0x0F, 0xAC, 0x70 };

//-------------------------------------
// Consolidated

// We don't care for accuracy so it's okay from the frame rate to round. There
// are 1024 samples per encoded frame.
const unsigned int TEST_AUDIO_FRAME_RATE = 44100 / 1024;
const unsigned int NUM_TEST_AUDIO_FRAMES = 12;
const uchar* testAudFrames[] = {
	testAudFrame0A, testAudFrame0B, testAudFrame1, testAudFrame2A,
	testAudFrame2B, testAudFrame3, testAudFrame4A, testAudFrame4B,
	testAudFrame5, testAudFrame6A, testAudFrame6B, testAudFrame7 };
const unsigned int testAudFrameSizes[] = {
	sizeof(testAudFrame0A), sizeof(testAudFrame0B), sizeof(testAudFrame1),
	sizeof(testAudFrame2A), sizeof(testAudFrame2B), sizeof(testAudFrame3),
	sizeof(testAudFrame4A), sizeof(testAudFrame4B), sizeof(testAudFrame5),
	sizeof(testAudFrame6A), sizeof(testAudFrame6B), sizeof(testAudFrame7) };

#endif // TESTDATA_H
